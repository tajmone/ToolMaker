# Makefile for lmk			Date: 1992-07-08 16:05:37/toolmake
#
# The various xxQ-macros are intended for commandline additions to the
# make invocation.
#

# The environmental variable TMHOME should be set to the ToolMaker
# home library, eg /usr/local/ToolMaker

ROOT	= /home/projects/ToolMaker
TMLIB	= $(ROOT)/lib/c/
TMBIN	= $(ROOT)/bin/bin-$(TMARCH)
INTLIB	= $(ROOT)/library

SUN3	= slug

RELEASEROOT	= $(ROOT)
RELEASELIB	= $(RELEASEROOT)/lib/c/
RELEASEBIN	= $(RELEASEROOT)/bin/bin-$(TMARCH)
RELEASEMAN	= $(RELEASEROOT)/man/man1

IMP	= $(TMBIN)/imp $(IMPQ)
PMK	= $(TMBIN)/pmk $(PMQ)
SMK	= $(TMBIN)/smk $(SMQ)
LMK	= $(TMBIN)/lmk $(LMQ)

INCLUDE	= -I../license -I../tmk -I../imp
LDFLAGS	= -lm -lnsl -L/usr/local/lib/4.1.2 $(LQ)

LIBS    = ../license/license.o ../tmk/libtmk.a ../imp/imp.a

CC = $(GCC) -ansi -pedantic
GCC = gcc
solaris1 sun4:=		GCC=	gcc2.7.2
solaris2:=	GCC=	gcc2.6.0

CFLAGS = $(CQ) $(INCLUDE)

debug:=CFLAGS = $(DEBUG) $(CQ) $(INCLUDE)
VERSIONOBJECTS = \
	lmkPaSema.o lmkParse.o \
	lmkErr.o \
	lmkScan.o \
	lmkScSema.o \
	lmkList.o \
	lmkTab.o \
	lmk.o

OBJECTS = $(VERSIONOBJECTS) version.o 

.KEEP_STATE:

# A release (optimised)
release	releaseARCH RELEASE :=CFLAGS= -O4 $(CQ) $(INCLUDE)

#
# Major make targets
#
# Normal compilation
debug all opt: tm lmk

# Only create source
source: tm 
	sh version.sh
	venum +t

# Use local lister
local: locallmk lmk

link: rm lmk


# Miscellaneous targets down here

debug list lmkobj:= DEBUG= -g

all release releaseARCH opt link:=	DEBUG= -O4

locallmk:
	./lmk lmk -library .

rm:
	rm lmk

lmk: tm lmkobj

# Create from C-sources (excluding TM-sources)
lmkobj: checkARCH $(TMARCH)

checkARCH:
	if test -f .arch ; then :; else echo "none" > .arch; fi
	-if test `cat .arch` != $(TMARCH); then \
	    rm *.o; \
	    echo $(TMARCH) > .arch ; \
	fi

sun3 sun4 solaris1 solaris2: ../license/license.h ../imp/impMacro.h ../tmk/tmk.h ../tmk/tmkCommon.h $(OBJECTS) $(LIBS)
	$(CC) -o lmk $(CFLAGS) $(OBJECTS) $(LIBS) $(LDFLAGS)

purify: ../license/license.h ../imp/impMacro.h ../tmk/tmk.h ../tmk/tmkCommon.h $(OBJECTS) $(LIBS)
	purify $(CC) -o lmk $(CFLAGS) $(OBJECTS) $(LIBS) $(LDFLAGS)

release:
	@if cvs status | egrep Status | egrep -v Up-to-date ; then \
		exit 1 ; \
	fi
	make newversion tm releaseARCH releaseSRC
	cvs rtag lmk`ls [0-9]*_[0-9]*_[0-9]*.* | sed s/\\\.//` lmk

releaseSRC:
	install -m 664 List.imp $(RELEASELIB)/List.imp
	install -m 664 lmk.1 $(RELEASEMAN)/lmk.1

releaseARCH: lmkobj
	install -m 775 lmk $(RELEASEBIN)/lmk

RELEASE:
	@if test -r CVS/Tag ; then \
	  : ; \
	else \
	  echo This tree is not checked out from a Tag! ; \
	  echo RELEASE not allowed!! ; \
	  exit 1 ; \
	fi
	@if cvs status | egrep Status | egrep -v Up-to-date ; then \
		exit 1 ; \
	fi
	make tm releaseARCH releaseSRC

newversion:
	@-\rm [0-9]*_[0-9]*_[0-9]*.*
	@sh version.sh
	venum +c
	echo "cat > `ls [0-9]*_[0-9]*_[0-9]*.*` <<EOF" > version.sh
	echo "LMK" >> version.sh
	echo "ListerMaker" >> version.sh
	echo "EOF" >> version.sh
	cvs commit -m 'New version' version.sh
	cp List.imp .List.imp
	echo %%COMMENTS >List.imp
	venum >> List.imp
	tail +3 .List.imp >> List.imp
	rm .List.imp
	cvs commit -m 'New version' List.imp

version.c: $(VERSIONOBJECTS)
	@-\rm [0-9]*_[0-9]*_[0-9]*.*
	@sh version.sh
	venum +t


#-----------------------
# ToolMaker generation

tm: .pmkstamp .smkstamp .lmkstamp

.smkstamp : lmk.voc lmk.smk lmk.tmk $(TMLIB)/Scan.imp
	$(SMK) lmk
	@touch .smkstamp

.pmkstamp : lmk.pmk lmk.tmk $(TMLIB)/Parse.imp $(TMLIB)/Err.imp
	$(PMK) lmk
	@touch .pmkstamp

.lmkstamp : lmk.lmk lmk.tmk List.imp
	$(LMK) lmk
	@touch .lmkstamp


#-----------------
# License handling

../license/license.h: $(INTLIB)/license.h
	@-[ ! -d ../license ] && mkdir ../license
	cp -p $(INTLIB)/license.h ../license/license.h

../license/license.o: $(INTLIB)/bin-$(TMARCH)/license.o
	@-[ ! -d ../license ] && mkdir ../license
	cp -p $(INTLIB)/bin-$(TMARCH)/license.o ../license/license.o


#------------------
# tmk libraries

../tmk/tmk.h: $(INTLIB)/tmk.h
	@-[ ! -d ../tmk ] && mkdir ../tmk
	cp -p $(INTLIB)/tmk.h ../tmk/tmk.h

../tmk/tmkCommon.h: $(INTLIB)/tmkCommon.h
	@-[ ! -d ../tmk ] && mkdir ../tmk
	cp -p $(INTLIB)/tmkCommon.h ../tmk/tmkCommon.h

../tmk/libtmk.a: $(INTLIB)/bin-$(TMARCH)/libtmk.a
	@-[ ! -d ../tmk ] && mkdir ../tmk
	cp -p $(INTLIB)/bin-$(TMARCH)/libtmk.a ../tmk/libtmk.a

#--------------------
# imp library

../imp/imp.a : $(INTLIB)/bin-$(TMARCH)/imp.a
	@-[ ! -d ../imp ] && mkdir ../imp
	cp $(INTLIB)/bin-$(TMARCH)/imp.a ../imp/imp.a
	-ranlib ../imp/imp.a

../imp/impMacro.h : $(INTLIB)/impMacro.h
	@-[ ! -d ../imp ] && mkdir ../imp
	cp $(INTLIB)/impMacro.h ../imp


#--
clean:
	rm -f *~ *.o core *.pml *.sml *.smt *.pmt *.lmt lmk.voc lmkParse.* lmkScan.* \
	lmkScSema.* lmkPaSema.* lmkCommon.h lmkList.* lmkErr.* lmk .???stamp

FILETER = | sed -e "\,/usr/include, d" | sort -u 

depend file:
	@echo -n "Make depend "
	@mv Makefile Makefile.~
	@sed -n '1,/^# DO NOT DELETE THIS LINE -- make depend depends on it.$$/ p' Makefile.~ > Makefile
	@for file in $(OBJECTS:.o=.c) ; do /lib/cpp $(INCLUDE) -M $$file | egrep -v '/usr/include|\.c$$' | cat >> Makefile ; echo -n . ; done
	@echo "done."

lmkParse.o: lmkParse.c
lmkPaSema.o: lmkPaSema.c
lmkErr.o: lmkErr.c
lmkScan.o: lmkScan.c
lmkScSema.o: lmkScSema.c
lmkList.o: lmkList.c

# DO NOT DELETE THIS LINE -- make depend depends on it.
