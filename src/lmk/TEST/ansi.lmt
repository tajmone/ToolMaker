%%SET lmkInclude(On)
%%SET lmkMessage(Embedded)
%%SET lmkListings(Single)
%%SET tmkForce(0)
%%SET tmkTarget("ansi-c")
%%SET lmkTarget("ansi-c")
%%SET tmkOs("SunOS")
%%SET lmkOs("SunOS")
%%SET tmkLibrary("%%(TMHOME)/lib/%%(tmkTarget)/")
%%SET lmkLibrary("../")
%%SET tmkPrefix("ansi")
%%SET lmkPrefix("ansi")
%%SET lmkEscape("`")
%%SET tmkTokenName("TmToken")
%%SET tmkTokenCode("code")
%%SET tmkTokenSrcp("srcp")
%%SET tmkTokenDecl (" int code", " TmSrcp srcp", " char *text", " int begin", " int end")
%%SET tmkSrcpName("TmSrcp")
%%SET tmkSrcpRow("line")
%%SET tmkSrcpCol("col")
%%SET tmkSrcpFile("file")
%%SET tmkSrcpDecl(" TmNatural line", " TmNatural col", " TmNatural file")
%%BEGIN(tmkImport)

/* .tmk-import */
typedef int TmNatural;
%%END(tmkImport)
%%SET lmkMSectName(%%(lmkPrefix)_ENGLISH_Messages)
%%SET lmkMSectOffs(0)
%%SET lmkMSectLen(36)
%%SET lmkMsgId("0     ")
%%SET lmkMsg("IMP -- Incremental Macro Processor %1")
%%SET lmkMsgId(, "1     ")
%%SET lmkMsg(, "No warnings or errors detected.")
%%SET lmkMsgId(, "2     ")
%%SET lmkMsg(, "No warnings issued.")
%%SET lmkMsgId(, "3     ")
%%SET lmkMsg(, "No errors detected.")
%%SET lmkMsgId(, "4     ")
%%SET lmkMsg(, "%1 informational message(s) produced.")
%%SET lmkMsgId(, "5     ")
%%SET lmkMsg(, "%1 warning(s) issued.")
%%SET lmkMsgId(, "6     ")
%%SET lmkMsg(, "%1 error(s) detected.")
%%SET lmkMsgId(, "7     ")
%%SET lmkMsg(, "Maximum number of messages exceeded.")
%%SET lmkMsgId(, "100   ")
%%SET lmkMsg(, "Parsing resumed.")
%%SET lmkMsgId(, "101   ")
%%SET lmkMsg(, "%1 inserted.")
%%SET lmkMsgId(, "102   ")
%%SET lmkMsg(, "%1 deleted.")
%%SET lmkMsgId(, "103   ")
%%SET lmkMsg(, "%1 replaced by %2.")
%%SET lmkMsgId(, "104   ")
%%SET lmkMsg(, "Syntax error, stack backed up.")
%%SET lmkMsgId(, "105   ")
%%SET lmkMsg(, "Syntax error.")
%%SET lmkMsgId(, "106   ")
%%SET lmkMsg(, "Parse stack overflow.")
%%SET lmkMsgId(, "107   ")
%%SET lmkMsg(, "Parse table error.")
%%SET lmkMsgId(, "108   ")
%%SET lmkMsg(, "Parsing terminated.")
%%SET lmkMsgId(, "201   ")
%%SET lmkMsg(, "File \""%1\"" not found.")
%%SET lmkMsgId(, "202   ")
%%SET lmkMsg(, "No file(s) given, statement ignored.")
%%SET lmkMsgId(, "203   ")
%%SET lmkMsg(, "Label \""%1\"" differs from corresponding BEGIN label.")
%%SET lmkMsgId(, "204   ")
%%SET lmkMsg(, "Variable \""%1\"" not set.")
%%SET lmkMsgId(, "205   ")
%%SET lmkMsg(, "Label \""%1\"" not defined.")
%%SET lmkMsgId(, "206   ")
%%SET lmkMsg(, "Unable to open file \""%1\"" where label is defined.")
%%SET lmkMsgId(, "207   ")
%%SET lmkMsg(, "Unable to open output file \""%1\"".")
%%SET lmkMsgId(, "208   ")
%%SET lmkMsg(, "Value \""%1\"" of wrong type, must be INTEGER.")
%%SET lmkMsgId(, "209   ")
%%SET lmkMsg(, "Index value \""%1\"" out of range.")
%%SET lmkMsgId(, "210   ")
%%SET lmkMsg(, "Operands must be of same type.")
%%SET lmkMsgId(, "211   ")
%%SET lmkMsg(, "Only variables may have index.")
%%SET lmkMsgId(, "212   ")
%%SET lmkMsg(, "Could not expand identifier %1")
%%SET lmkMsgId(, "213   ")
%%SET lmkMsg(, "Incorrect number of parameters given in INCLUDE statement")
%%SET lmkMsgId(, "214   ")
%%SET lmkMsg(, "Empty string not allowed as variable name")
%%SET lmkMsgId(, "215   ")
%%SET lmkMsg(, "More than %1 levels of evaluation, probably infinite loop")
%%SET lmkMsgId(, "301   ")
%%SET lmkMsg(, "Erroneous argument to ast access routine : %1")
%%SET lmkMsgId(, "302   ")
%%SET lmkMsg(, "Erroneous node type found in %1")
%%SET lmkMsgId(, "303   ")
%%SET lmkMsg(, "%1 times")
%%SET lmkMsgId(, "304   ")
%%SET lmkMsg(, "Unable to allocate memory !")
%%PROCESS("%%(tmkLibrary)/Common.imp")
%%PROCESS("%%(lmkLibrary)/List.imp")
