%%SET lmkInclude(On)
%%SET lmkMessage(Embedded)
%%SET lmkListings(Multiple)
%%SET tmkForce(0)
%%SET tmkTarget("ansi-c")
%%SET lmkTarget("ansi-c")
%%SET tmkOs("SunOS")
%%SET lmkOs("SunOS")
%%SET tmkLibrary("%%(TMHOME)/lib/%%(tmkTarget)/")
%%SET lmkLibrary("../")
%%SET tmkPrefix("lmk")
%%SET lmkPrefix("lmk")
%%SET lmkEscape("`")
%%SET tmkTokenName("LmkToken")
%%SET tmkTokenCode("code")
%%SET tmkTokenSrcp("srcp")
%%SET tmkTokenDecl (" int code", " TmkSrcp srcp", " char *sval", " int ival", " long fpos", " long length")
%%SET tmkSrcpName("TmkSrcp")
%%SET tmkSrcpRow("line")
%%SET tmkSrcpCol("col")
%%SET tmkSrcpFile("file")
%%BEGIN(tmkImport)

#include "tmkCommon.h"
%%END(tmkImport)
%%SET lmkMSectName(%%(lmkPrefix)_ENGLISH_Messages)
%%SET lmkMSectOffs(0)
%%SET lmkMSectLen(29)
%%SET lmkMsgId("0     ")
%%SET lmkMsg("ToolMaker Lister 1.0")
%%SET lmkMsgId(, "1     ")
%%SET lmkMsg(, "No warnings or errors detected.")
%%SET lmkMsgId(, "2     ")
%%SET lmkMsg(, "No warnings issued.")
%%SET lmkMsgId(, "3     ")
%%SET lmkMsg(, "No errors detected.")
%%SET lmkMsgId(, "4     ")
%%SET lmkMsg(, "%1 informational message(s) produced.")
%%SET lmkMsgId(, "5     ")
%%SET lmkMsg(, "%1 warning(s) issued.")
%%SET lmkMsgId(, "6     ")
%%SET lmkMsg(, "%1 error(s) detected.")
%%SET lmkMsgId(, "7     ")
%%SET lmkMsg(, "Maximum number of messages exceeded.")
%%SET lmkMsgId(, "50    ")
%%SET lmkMsg(, "Incorrect option.")
%%SET lmkMsgId(, "51    ")
%%SET lmkMsg(, "Incorrect section.")
%%SET lmkMsgId(, "52    ")
%%SET lmkMsg(, "%1 section not allowed in this file when .tmk file exists")
%%SET lmkMsgId(, "60    ")
%%SET lmkMsg(, "Section defined twice, new section skipped.")
%%SET lmkMsgId(, "61    ")
%%SET lmkMsg(, "Directive defined twice, new directive skipped.")
%%SET lmkMsgId(, "62    ")
%%SET lmkMsg(, "Token section must have a %1 member.")
%%SET lmkMsgId(, "63    ")
%%SET lmkMsg(, "Srcp section must have a %1 member.")
%%SET lmkMsgId(, "64    ")
%%SET lmkMsg(, "%1 section not found")
%%SET lmkMsgId(, "65    ")
%%SET lmkMsg(, "If declaration is given in one %1 member it must be given in all")
%%SET lmkMsgId(, "66    ")
%%SET lmkMsg(, "Srcp section must have at least one member.")
%%SET lmkMsgId(, "70    ")
%%SET lmkMsg(, "File \""%1\"" not found.")
%%SET lmkMsgId(, "100   ")
%%SET lmkMsg(, "Parsing resumed.")
%%SET lmkMsgId(, "101   ")
%%SET lmkMsg(, "%1 inserted.")
%%SET lmkMsgId(, "102   ")
%%SET lmkMsg(, "%1 deleted.")
%%SET lmkMsgId(, "103   ")
%%SET lmkMsg(, "%1 replaced by %2.")
%%SET lmkMsgId(, "104   ")
%%SET lmkMsg(, "Syntax error, stack backed up.")
%%SET lmkMsgId(, "105   ")
%%SET lmkMsg(, "Syntax error.")
%%SET lmkMsgId(, "106   ")
%%SET lmkMsg(, "Parse stack overflow.")
%%SET lmkMsgId(, "107   ")
%%SET lmkMsg(, "Parse table error.")
%%SET lmkMsgId(, "108   ")
%%SET lmkMsg(, "Parsing terminated.")
%%SET lmkMsgId(, "200   ")
%%SET lmkMsg(, "Message section \""%1\"" already defined.")
%%PROCESS("%%(tmkLibrary)/Common.imp")
%%PROCESS("%%(lmkLibrary)/List.imp")
