#	Author : Tony Olsson
#	Date   : 1993-08-20/tony@wolf
#

.KEEP_STATE:

SHELL		= /bin/sh

ROOT		= /home/projects/ToolMaker
TMLIB		= $(ROOT)/lib/c/
TMBIN		= $(ROOT)/bin/bin-$(TMARCH)
INTLIB		= $(ROOT)/library

RELEASEROOT	= $(ROOT)
RELEASELIB	= $(RELEASEROOT)/lib/c/
RELEASEBIN	= $(RELEASEROOT)/bin/bin-$(TMARCH)
RELEASEMAN	= $(RELEASEROOT)/man/man1

IMP		= $(TMBIN)/imp $(IMPQ)
PMK		= $(TMBIN)/pmk $(PMQ)
SMK		= $(TMBIN)/smk $(SMQ)
LMK		= $(TMBIN)/lmk $(LMQ)

INCLUDE		= -I../license -I../tmk -I../imp
LIBS    	= ../license/license.o ../tmk/libtmk.a ../imp/imp.a
LDFLAGS		= -lm $(LQ)

CC		= $(GCC) -D__svr4__ -pedantic -Wall $(INCLUDE) # -D_INCLUDE_POSIX_SOURCE 

CPP		= /lib/cpp
MALLOCDEBUG	=
SMKFLAGS	=

GCC		= gcc2.6.0


VERSIONOBJECTS	= smkPaSema.o smkScSema.o smkParse.o smkErr.o smkScan.o \
		  smkList.o smk.o token.o scanner.o vocabulary.o \
		  definition.o rule.o ast.o lmprintf.o name.o char.o nfa.o \
		  lookahead.o dfa.o map.o pack.o write.o time.o \
		  action.o set.o screen.o smalloc.o nfas.o common.o

OBJECTS		= $(VERSIONOBJECTS) version.o

BOOT		= smkScan.c smkScSema.c smkScan.h smkParse.c smkParse.h \
		  smkPaSema.c mkErr.c smkCommon.h smkList.c smkList.h

CFLAGS		= -g $(CQ) $(INCLUDE)

opt		:= CFLAGS = -O2 $(INCLUDE)
purify		:= CFLAGS = -g $(INCLUDE)
all		:= CFLAGS = -g $(INCLUDE)
debug		:= CFLAGS = -g $(INCLUDE)
local		:= CFLAGS = -g $(INCLUDE)
release releaseARCH RELEASE := CFLAGS = -O2 $(CQ) $(INCLUDE)
trace		:= CFLAGS = -g $(INCLUDE) -DDEBUG
trace		:= MALLOCDEBUG = /usr/lib/debug/malloc.o
trace		:= SMKFLAGS = -verbose

################################################################################
#
#
debug all opt trace: tm smk

lint: tm $(OBJECTS:.o=.c)
	lint $(OBJECTS:.o=.c)

################################################################################
#
#

purify: tm $(OBJECTS) $(LIBS)
	purify $(CC) -o smk $(CFLAGS) $(OBJECTS) $(LIBS) $(LDFLAGS) $(MALLOCDEBUG)

smk: tm smkobj
	

smkobj: checkARCH $(TMARCH)

checkARCH:
	if test -f .arch ; then :; else echo "none" > .arch; fi
	-if test `cat .arch` != $(TMARCH); then \
	    rm *.o; \
	    echo $(TMARCH) > .arch ; \
	fi

hp: $(OBJECTS) $(LIBS)
	$(CC) -o smk $(CFLAGS) $(OBJECTS) $(LIBS) $(LDFLAGS) $(MALLOCDEBUG)

release:
	@if cvs status | egrep Status | egrep -v Up-to-date ; then \
		exit 1 ; \
	fi
	make newversion tm releaseARCH releaseSRC
	cvs rtag smk`ls [0-9]*_[0-9]*_[0-9]*.* | sed s/\\\.//` smk

# Since install syntax differ between hp and sun we must handle
# these separately.

releaseSRC:
	install -f $(RELEASELIB) Scan.imp \
	chmod 664 $(RELEASELIB)/Scan.imp ; \
	install -f $(RELEASEMAN) smk.1 \
	chmod 664 $(RELEASEMAN)/smk.1 ; \

releaseARCH: smkobj
	install -f $(RELEASEBIN) smk \
	chmod 755 $(RELEASEBIN)/smk ; \

RELEASE:
	@if test -r CVS/Tag ; then \
	  : ; \
	else \
	  echo This tree is not checked out from a Tag! ; \
	  echo RELEASE not allowed!! ; \
	  exit 1 ; \
	fi
	@if cvs status | egrep Status | egrep -v Up-to-date ; then \
		exit 1 ; \
	fi
	make tm releaseARCH releaseSRC

newversion:
	@-\rm [0-9]*_[0-9]*_[0-9]*.*
	@sh version.sh
	venum +c
	echo "cat > `ls [0-9]*_[0-9]*_[0-9]*.*` <<EOF" > version.sh
	echo "SMK" >> version.sh
	echo "ScannerMaker" >> version.sh
	echo "EOF" >> version.sh
	cvs commit -m 'New version' version.sh
	cp Scan.imp .Scan.imp
	echo %%COMMENTS >Scan.imp
	venum >> Scan.imp
	tail +3 .Scan.imp >> Scan.imp
	rm .Scan.imp
	cvs commit -m 'New version' Scan.imp

#-
local: localsm smk

localsm:
	./smk -lib . smk

#-

force tables tm: .stamp_pmk .stamp_smk .stamp_lmk

force	:= PMKFLAGS = -force
force	:= SMKFLAGS = -force
force	:= LMKFLAGS = -force

tables	:= PMKFLAGS = --generate -generate tables
tables	:= SMKFLAGS = --generate -generate tables
tables	:= LMKFLAGS = --generate -generate tables

.stamp_pmk: smk.tmk smk.pmk $(TMLIB)/Parse.imp $(TMLIB)/Err.imp $(TMLIB)/Common.imp
	$(PMK) $(PMKFLAGS) smk
	@touch .stamp_pmk

.stamp_smk: smk.tmk smk.smk .stamp_pmk Scan.imp
	$(SMK) $(SMKFLAGS) smk
	@touch .stamp_smk

.stamp_lmk: smk.lmk $(TMLIB)/List.imp
	$(LMK) $(LMKFLAGS) smk
	@touch .stamp_lmk


#-----------------
# License handling

../license/license.h: $(INTLIB)/license.h
	@-[ ! -d ../license ] && mkdir ../license
	cp -p $(INTLIB)/license.h ../license/license.h

../license/license.o: $(INTLIB)/bin-$(TMARCH)/license.o
	@-[ ! -d ../license ] && mkdir ../license
	cp -p $(INTLIB)/bin-$(TMARCH)/license.o ../license/license.o


#------------------
# tmk libraries

../tmk/tmk.h: $(INTLIB)/tmk.h
	@-[ ! -d ../tmk ] && mkdir ../tmk
	cp -p $(INTLIB)/tmk.h ../tmk/tmk.h

../tmk/tmkCommon.h: $(INTLIB)/tmkCommon.h
	@-[ ! -d ../tmk ] && mkdir ../tmk
	cp -p $(INTLIB)/tmkCommon.h ../tmk/tmkCommon.h

../tmk/libtmk.a: $(INTLIB)/bin-$(TMARCH)/libtmk.a
	@-[ ! -d ../tmk ] && mkdir ../tmk
	cp -p $(INTLIB)/bin-$(TMARCH)/libtmk.a ../tmk/libtmk.a


#--------------------
# imp library

../imp/imp.a : $(INTLIB)/bin-$(TMARCH)/imp.a
	@-[ ! -d ../imp ] && mkdir ../imp
	cp $(INTLIB)/bin-$(TMARCH)/imp.a ../imp/imp.a
	-ranlib ../imp/imp.a

../imp/impMacro.h : $(INTLIB)/impMacro.h
	@-[ ! -d ../imp ] && mkdir ../imp
	cp $(INTLIB)/impMacro.h ../imp/impMacro.h


version.o: version.c

# We rely on version.c from making on the Sun architectures
#version.c: $(VERSIONOBJECTS)
#	@-\rm [0-9]*_[0-9]*_[0-9]*.*
#	@sh version.sh
#	venum +t

#--
clean:
	-rm -f *~ *.o core *.pml *.sml *.smt *.pmt *.lmt smk.voc smkParse.* smkScan.* \
	smkScSema.* smkPaSema.* smkCommon.h smkList.* smkErr.* .stamp_???

veryclean: clean
	-rm -f smk

depend file: depend.gcc

depend.gcc:
	@echo -n "Make depend "
	@mv Makefile Makefile.~
	@sed -n '1,/^# DO NOT DELETE THIS LINE -- make depend depends on it.$$/ p' Makefile.~ > Makefile
	@for file in $(OBJECTS:.o=.c) ; do $(CC) $(INCLUDE) -MM $$file >> Makefile 2> /dev/null ; echo -n "." ; done
	@echo " done."

depend.cc:
	@echo -n "Make depend "
	@mv Makefile Makefile.~
	@sed -n '1,/^# DO NOT DELETE THIS LINE -- make depend depends on it.$$/ p' Makefile.~ > Makefile
	@for file in $(OBJECTS:.o=.c) ; do \
	  $(CC) $(INCLUDE) -M $$file  2> /dev/null |\
	  awk 'NR == 1 {printf "%s %s",$$1,$$2;next} $$2 ~ /^[^/]/ {printf " %s",$$2} END {printf "\n"}' |\
	  sed 's, ./, ,g' >> Makefile ; echo -n "." ; done
	@echo " done."

# DO NOT DELETE THIS LINE -- make depend depends on it.
smkPaSema.o : smkPaSema.c common.h action.h token.h ../tmk/tmkCommon.h vocabulary.h \
  name.h scanner.h rule.h ast.h lookahead.h nfas.h nfa.h dfa.h pack.h definition.h \
  map.h set.h smkScan.h smkCommon.h smkList.h smk_i.h ../tmk/tmk.h 
smkScSema.o : smkScSema.c common.h action.h token.h ../tmk/tmkCommon.h vocabulary.h \
  name.h scanner.h rule.h ast.h lookahead.h nfas.h nfa.h dfa.h pack.h set.h smkScan.h \
  smkCommon.h smalloc.h smkList.h smk_i.h ../tmk/tmk.h 
smkParse.o : smkParse.c common.h action.h token.h ../tmk/tmkCommon.h vocabulary.h \
  name.h scanner.h rule.h ast.h lookahead.h nfas.h nfa.h dfa.h pack.h definition.h \
  map.h set.h smkScan.h smkCommon.h smkList.h smk_i.h ../tmk/tmk.h 
smkErr.o : smkErr.c common.h action.h token.h ../tmk/tmkCommon.h vocabulary.h \
  name.h scanner.h rule.h ast.h lookahead.h nfas.h nfa.h dfa.h pack.h definition.h \
  map.h set.h smkScan.h smkCommon.h smkList.h smk_i.h ../tmk/tmk.h
smkScan.o : smkScan.c common.h action.h token.h ../tmk/tmkCommon.h vocabulary.h \
  name.h scanner.h rule.h ast.h lookahead.h nfas.h nfa.h dfa.h pack.h set.h smkScan.h \
  smkCommon.h smalloc.h smkList.h smk_i.h ../tmk/tmk.h 
smkList.o : smkList.c smkList.h smkCommon.h common.h ../tmk/tmkCommon.h name.h \
  action.h token.h vocabulary.h scanner.h rule.h ast.h lookahead.h nfas.h nfa.h \
  dfa.h pack.h 
smk.o : smk.c ../imp/impMacro.h common.h char.h dfa.h pack.h nfas.h nfa.h rule.h \
  ../tmk/tmkCommon.h scanner.h vocabulary.h name.h token.h ast.h lookahead.h action.h \
  ../license/license.h map.h screen.h set.h smkScan.h smkCommon.h smalloc.h smkList.h \
  smkParse.h smk_i.h ../tmk/tmk.h time.h version.h write.h 
token.o : token.c common.h smalloc.h token.h ../tmk/tmkCommon.h vocabulary.h \
  name.h scanner.h rule.h ast.h lookahead.h nfas.h nfa.h dfa.h pack.h action.h 
scanner.o : scanner.c common.h scanner.h ../tmk/tmkCommon.h vocabulary.h name.h \
  token.h rule.h ast.h lookahead.h nfas.h nfa.h dfa.h pack.h action.h smalloc.h \
  smkList.h smkCommon.h smk_i.h ../tmk/tmk.h 
vocabulary.o : vocabulary.c common.h lmprintf.h smalloc.h smkList.h smkCommon.h \
  ../tmk/tmkCommon.h name.h action.h token.h vocabulary.h scanner.h rule.h ast.h \
  lookahead.h nfas.h nfa.h dfa.h pack.h smkScan.h smk_i.h ../tmk/tmk.h 
definition.o : definition.c definition.h name.h ast.h action.h token.h ../tmk/tmkCommon.h \
  vocabulary.h common.h scanner.h rule.h lookahead.h nfas.h nfa.h dfa.h pack.h \
  lmprintf.h smalloc.h smkList.h smkCommon.h smk_i.h ../tmk/tmk.h 
rule.o : rule.c common.h lmprintf.h ast.h name.h rule.h ../tmk/tmkCommon.h scanner.h \
  vocabulary.h token.h nfas.h nfa.h dfa.h pack.h lookahead.h action.h smalloc.h \
  smkList.h smkCommon.h smk_i.h ../tmk/tmk.h 
ast.o : ast.c ast.h name.h char.h common.h lmprintf.h smalloc.h smkList.h smkCommon.h \
  ../tmk/tmkCommon.h action.h token.h vocabulary.h scanner.h rule.h lookahead.h \
  nfas.h nfa.h dfa.h pack.h 
lmprintf.o : lmprintf.c common.h lmprintf.h smkList.h smkCommon.h ../tmk/tmkCommon.h \
  name.h action.h token.h vocabulary.h scanner.h rule.h ast.h lookahead.h nfas.h \
  nfa.h dfa.h pack.h 
name.o : name.c smkList.h smkCommon.h common.h ../tmk/tmkCommon.h name.h action.h \
  token.h vocabulary.h scanner.h rule.h ast.h lookahead.h nfas.h nfa.h dfa.h pack.h \
  smk_i.h ../tmk/tmk.h smalloc.h lmprintf.h 
char.o : char.c smk_i.h ../tmk/tmk.h ../tmk/tmkCommon.h name.h char.h map.h \
  smalloc.h set.h smkScan.h smkCommon.h common.h action.h token.h vocabulary.h \
  scanner.h rule.h ast.h lookahead.h nfas.h nfa.h dfa.h pack.h 
nfa.o : nfa.c ast.h name.h char.h lmprintf.h lookahead.h rule.h common.h ../tmk/tmkCommon.h \
  scanner.h vocabulary.h token.h nfas.h nfa.h dfa.h pack.h action.h smalloc.h \
  smkList.h smkCommon.h smk_i.h ../tmk/tmk.h 
lookahead.o : lookahead.c ast.h name.h lookahead.h rule.h common.h ../tmk/tmkCommon.h \
  scanner.h vocabulary.h token.h nfas.h nfa.h dfa.h pack.h action.h smalloc.h 
dfa.o : dfa.c char.h dfa.h pack.h nfas.h nfa.h common.h rule.h ../tmk/tmkCommon.h \
  scanner.h vocabulary.h name.h token.h ast.h lookahead.h action.h lmprintf.h \
  map.h set.h smkScan.h smkCommon.h smalloc.h smkList.h smk_i.h ../tmk/tmk.h 
map.o : map.c char.h lmprintf.h map.h smkList.h smkCommon.h common.h ../tmk/tmkCommon.h \
  name.h action.h token.h vocabulary.h scanner.h rule.h ast.h lookahead.h nfas.h \
  nfa.h dfa.h pack.h smk_i.h ../tmk/tmk.h 
pack.o : pack.c smk_i.h ../tmk/tmk.h ../tmk/tmkCommon.h name.h pack.h 
write.o : write.c smk_i.h ../tmk/tmk.h ../tmk/tmkCommon.h name.h pack.h action.h \
  token.h vocabulary.h common.h scanner.h rule.h ast.h lookahead.h nfas.h nfa.h \
  dfa.h set.h smkScan.h smkCommon.h map.h version.h screen.h smalloc.h lmprintf.h 
time.o : time.c time.h 
action.o : action.c smalloc.h action.h token.h ../tmk/tmkCommon.h vocabulary.h \
  common.h name.h scanner.h rule.h ast.h lookahead.h nfas.h nfa.h dfa.h pack.h 
set.o : set.c smk_i.h ../tmk/tmk.h ../tmk/tmkCommon.h name.h set.h smkScan.h \
  smkCommon.h common.h action.h token.h vocabulary.h scanner.h rule.h ast.h lookahead.h \
  nfas.h nfa.h dfa.h pack.h char.h smkList.h lmprintf.h 
screen.o : screen.c ast.h name.h common.h rule.h ../tmk/tmkCommon.h scanner.h \
  vocabulary.h token.h nfas.h nfa.h dfa.h pack.h lookahead.h action.h screen.h \
  set.h smkScan.h smkCommon.h smalloc.h 
smalloc.o : smalloc.c common.h smalloc.h 
nfas.o : nfas.c common.h smalloc.h lmprintf.h nfa.h nfas.h rule.h ../tmk/tmkCommon.h \
  scanner.h vocabulary.h name.h token.h dfa.h pack.h ast.h lookahead.h action.h 
version.o : version.c version.h 
