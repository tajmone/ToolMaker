########## imp ##########
==> imp.smt <==
%%SET tmkTokenName("TmToken")
%%SET tmkTokenCode("code")
%%SET tmkTokenSrcp("srcp")
%%SET tmkTokenDecl (" int code", " TmSrcp srcp", " char *text", " int begin", " int end")
%%SET tmkSrcpName("TmSrcp")
%%SET tmkSrcpRow("line")
%%SET tmkSrcpCol("col")
%%SET tmkSrcpFile("file")
%%SET tmkSrcpDecl(" TmNatural line", " TmNatural col", " TmNatural file")
%%BEGIN(tmkImport)

/* .tmk-import */
typedef int TmNatural;
%%END(tmkImport)
%%SET smVersion("SMK -- ScannerMaker 2.1(25) (1997-07-28 17:55)")
%%SET tmkForce(0)
%%SET tmkTarget("c")
%%SET smkTarget("c")
%%SET tmkLibrary("../../../tmk")
%%SET smkLibrary("../..")
%%SET tmkPrefix("imp")
%%SET smkPrefix("imp")
%%SET smTokenSize("1024")
%%SET smTokenMaxSize("524288")
%%SET smTrace(0)
%%SET smVerbose(0)
%%SET smNewLine(10)
%%SET smCarriageReturn(13)
%%BEGIN(smVOCABULARY)
typedef enum %%(smkPrefix)ScScanner {
	%%(smkPrefix)_MAIN_MAIN_Scanner = 0,
	%%(smkPrefix)_MAIN_IMP_Scanner = 1,
	%%(smkPrefix)_MAIN_STRING_Scanner = 2,
	%%(smkPrefix)_MAIN_KEEP_Scanner = 3,
	%%(smkPrefix)_MAIN_COMMENT_Scanner = 4
} %%(smkPrefix)ScScanner;

typedef enum %%(smkPrefix)_MAIN_ScToken {
	%%(smkPrefix)_MAIN_UNKNOWN_Token = 0,
	%%(smkPrefix)_MAIN_ENDOFTEXT_Token = 1,
	%%(smkPrefix)_MAIN_2_Token = 2,
	%%(smkPrefix)_MAIN_3_Token = 3,
	%%(smkPrefix)_MAIN_4_Token = 4,
	%%(smkPrefix)_MAIN_5_Token = 5,
	%%(smkPrefix)_MAIN_6_Token = 6,
	%%(smkPrefix)_MAIN_7_Token = 7,
	%%(smkPrefix)_MAIN_8_Token = 8,
	%%(smkPrefix)_MAIN_9_Token = 9,
	%%(smkPrefix)_MAIN_10_Token = 10,
	%%(smkPrefix)_MAIN_11_Token = 11,
	%%(smkPrefix)_MAIN_12_Token = 12,
	%%(smkPrefix)_MAIN_13_Token = 13,
	%%(smkPrefix)_MAIN_14_Token = 14,
	%%(smkPrefix)_MAIN_15_Token = 15,
	%%(smkPrefix)_MAIN_16_Token = 16,
	%%(smkPrefix)_MAIN_17_Token = 17,
	%%(smkPrefix)_MAIN_TEXT_Token = 18,
	%%(smkPrefix)_MAIN_19_Token = 19,
	%%(smkPrefix)_MAIN_20_Token = 20,
	%%(smkPrefix)_MAIN_21_Token = 21,
	%%(smkPrefix)_MAIN_22_Token = 22,
	%%(smkPrefix)_MAIN_23_Token = 23,
	%%(smkPrefix)_MAIN_24_Token = 24,
	%%(smkPrefix)_MAIN_25_Token = 25,
	%%(smkPrefix)_MAIN_26_Token = 26,
	%%(smkPrefix)_MAIN_27_Token = 27,
	%%(smkPrefix)_MAIN_28_Token = 28,
	%%(smkPrefix)_MAIN_29_Token = 29,
	%%(smkPrefix)_MAIN_INTEGER_Token = 30,
	%%(smkPrefix)_MAIN_31_Token = 31,
	%%(smkPrefix)_MAIN_32_Token = 32,
	%%(smkPrefix)_MAIN_33_Token = 33,
	%%(smkPrefix)_MAIN_34_Token = 34,
	%%(smkPrefix)_MAIN_35_Token = 35,
	%%(smkPrefix)_MAIN_36_Token = 36,
	%%(smkPrefix)_MAIN_37_Token = 37,
	%%(smkPrefix)_MAIN_38_Token = 38,
	%%(smkPrefix)_MAIN_39_Token = 39,
	%%(smkPrefix)_MAIN_40_Token = 40,
	%%(smkPrefix)_MAIN_41_Token = 41,
	%%(smkPrefix)_MAIN_QUOT_STRING_Token = 42,
	%%(smkPrefix)_MAIN_43_Token = 43,
	%%(smkPrefix)_MAIN_44_Token = 44,
	%%(smkPrefix)_MAIN_UNQUOT_STRING_Token = 45,
	%%(smkPrefix)_MAIN_c272525COMMENT27_Token = -1,
	%%(smkPrefix)_MAIN_c2725252D2D27_Token = -1,
	%%(smkPrefix)_MAIN_BLANK_Token = -1,
	%%(smkPrefix)_MAIN_COMMENT_Token = -1
} %%(smkPrefix)_MAIN_ScToken;

%%END(smVOCABULARY)
%%BEGIN(smDEBUG)
static char *smDebugTokens[78]={
	"'`%`%('",
	"'`%`%IF'",
	"'`%`%SET'",
	"'`%`%END'",
	"'`%`%KEEP'",
	"'`%`%ESET'",
	"'`%`%ELSE'",
	"'`%`%LOOP'",
	"'`%`%ENDIF'",
	"'`%`%ELSIF'",
	"'`%`%BEGIN'",
	"'`%`%ENDLOOP'",
	"'`%`%MESSAGE'",
	"'`%`%INCLUDE'",
	"'`%`%PROCESS'",
	"'`%`%EINCLUDE'",
	"'`%`%COMMENT'",
	"'`%`%--'",
	"'`%`%--'",
	"TEXT",
	"TEXT",
	"TEXT",
	"TEXT",
	"ENDOFTEXT",
	"'('",
	"')'",
	"'NOT'",
	"'AND'",
	"'OR'",
	"'<'",
	"'>'",
	"'<='",
	"'>='",
	"'='",
	"'#'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"','",
	"'?R'",
	"'?V'",
	"'?'",
	"'['",
	"']'",
	"'{'",
	"'}'",
	"'IMP$SYSTEM'",
	"'`%`%('",
	"INTEGER",
	"UNQUOT_STRING",
	"QUOT_STRING",
	"QUOT_STRING",
	"QUOT_STRING",
	"UNKNOWN",
	"ENDOFTEXT",
	"BLANK",
	"COMMENT",
	"'`%`%('",
	"QUOT_STRING",
	"QUOT_STRING",
	"QUOT_STRING",
	"QUOT_STRING",
	"QUOT_STRING",
	"QUOT_STRING",
	"QUOT_STRING",
	"'`%`%KEEP'",
	"'`%`%KEEP'",
	"'`%`%KEEP'",
	"'`%`%KEEP'",
	"'`%`%KEEP'",
	"'`%`%KEEP'",
	"'`%`%COMMENT'",
	"'`%`%COMMENT'",
	"'`%`%COMMENT'",
	"'`%`%COMMENT'",
	"'`%`%COMMENT'",
	"'`%`%COMMENT'"};
static char *smDebugScanners[6]={
	"MAIN::MAIN",	"MAIN::IMP",	"MAIN::STRING",	"MAIN::KEEP",	"MAIN::COMMENT",""};
%%END(smDEBUG)
%%BEGIN(smDECLARATION)

  
#include <stdio.h>
#include "impMacro.h"
#include "impList.h"
#define PUSH(scanner) (lexScanner[lexBalance++]=scanner)
#define POP (lexScanner[--lexBalance])
#define TOP (lexScanner[lexBalance])
#define BALANCE (lexBalance>0)

  static int lexBalance=0;
  static int lexScanner[512];
  static int lexColumn=0;
  static int glue=0;


%%END(smDECLARATION)
%%BEGIN(smPOSTHOOK)


/*  printf("TOKEN `%d LENGTH `%d AT `%d `%d (`%d)\n",smCode,this->smLength,this->smLine,this->smColumn,this->smPosition);*/
  smToken->srcp.file = this->fileNo;


%%END(smPOSTHOOK)
%%BEGIN(smCONTEXT)


  int fd;
  int fileNo;
  int endPos;

%%END(smCONTEXT)
%%BEGIN(smREADER)


  return read(this->fd,smBuffer,smLength);


%%END(smREADER)
%%BEGIN(smACTION4)
 lexColumn=this->smColumn;this->smScanner=imp_imp_Scanner; 
%%END(smACTION4)
%%BEGIN(smACTION5)
 goto smContinue; 
%%END(smACTION5)
%%BEGIN(smACTION6)
{
  smToken->text=(char *)malloc(this->smLength+1);
  impCopy(this,smToken->text,0,this->smLength);
  smToken->text[this->smLength]=0;
  smToken->begin=this->smPosition;
  smToken->end=this->smLength+this->smPosition-1;
}
%%END(smACTION6)
%%BEGIN(smACTION7)
 {
  register int skip;

  skip=1;
  if(this->smColumn>1) while(this->smText[this->smLength-skip]<=' ') skip++;
  if(skip>1) impSkip(this,-skip+1);
} 
%%END(smACTION7)
%%BEGIN(smACTION8)
 
  lexColumn=this->smColumn;
  this->smText = this->smText+this->smLength;
  this->smLength = 0;
  PUSH(imp_main_Scanner);
  this->smScanner=imp_keep_Scanner; 
  goto smContinue;

%%END(smACTION8)
%%BEGIN(smACTION9)
 
  lexColumn=this->smColumn;PUSH(imp_main_Scanner);this->smScanner=imp_comment_Scanner; goto smContinue;

%%END(smACTION9)
%%BEGIN(smACTION10)
 
  if ((this->smColumn == 1) && (this->smText[this->smLength] == '\n'))
    impSkip(this,1);

%%END(smACTION10)
%%BEGIN(smACTION11)
 lexColumn=this->smColumn; PUSH(imp_main_Scanner);this->smScanner=imp_imp_Scanner; 
%%END(smACTION11)
%%BEGIN(smACTION12)
 lexColumn=1;this->smScanner=imp_imp_Scanner; 
%%END(smACTION12)
%%BEGIN(smACTION13)
 lexColumn=1;this->smScanner=imp_imp_Scanner; 
%%END(smACTION13)
%%BEGIN(smACTION14)
{
  if (this->smText[this->smLength-1] == impEsc) 
    impSkip(this,1); 
  smToken->text=(char *)malloc(this->smLength+1);
  impCopy(this,smToken->text,0,this->smLength);
  smToken->text[this->smLength]=0;
  smToken->begin=this->smPosition;
  smToken->end=this->smLength+this->smPosition-1;
}
%%END(smACTION14)
%%BEGIN(smACTION15)
{
  if (this->smText[this->smLength-1] == impEsc) 
    impSkip(this,1); 
  smToken->text=(char *)malloc(this->smLength+1);
  impCopy(this,smToken->text,0,this->smLength);
  smToken->text[this->smLength]=0;
  smToken->begin=this->smPosition;
  smToken->end=this->smLength+this->smPosition-1;
}
%%END(smACTION15)
%%BEGIN(smACTION16)
{
  if (this->smText[this->smLength-1] == impEsc) 
    impSkip(this,1); 
  smToken->text=(char *)malloc(this->smLength+1);
  impCopy(this,smToken->text,0,this->smLength);
  smToken->text[this->smLength]=0;
  smToken->begin=this->smPosition;
  smToken->end=this->smLength+this->smPosition-1;
}
%%END(smACTION16)
%%BEGIN(smACTION17)
 if(BALANCE) PUSH(imp_imp_Scanner); else PUSH(imp_main_Scanner); 
%%END(smACTION17)
%%BEGIN(smACTION18)

  this->smScanner=POP; 
  if(this->smScanner==imp_string_Scanner || lexColumn>1) 
    impSkip(this,-(this->smLength-1)); 
  if(this->smText[this->smLength-1]==impEsc) impSkip(this,1); 
  smToken->text=(char *)malloc(this->smLength+1);
  impCopy(this,smToken->text,1,this->smLength);
  smToken->text[this->smLength-1]=0;
  smToken->begin=this->smPosition;
  smToken->end=this->smLength+this->smPosition-1;

%%END(smACTION18)
%%BEGIN(smACTION19)
 PUSH(imp_imp_Scanner); 
%%END(smACTION19)
%%BEGIN(smACTION20)
{
  smToken->text=(char *)malloc(this->smLength-1);
  impCopy(this,smToken->text,1,this->smLength-1);
  smToken->text[this->smLength-2]=0;
  smToken->begin=this->smPosition;
  smToken->end=this->smLength+this->smPosition-3;
}
%%END(smACTION20)
%%BEGIN(smACTION21)
{
  smToken->text=(char *)malloc(this->smLength);
  impCopy(this,smToken->text,1,this->smLength);
  smToken->text[this->smLength-1]=0;
  smToken->begin=this->smPosition;
  smToken->end=this->smLength+this->smPosition-2;
}
%%END(smACTION21)
%%BEGIN(smACTION22)
{
  smToken->text=(char *)malloc(this->smLength);
  impCopy(this,smToken->text,1,this->smLength);
  smToken->text[this->smLength-1]=0;
  smToken->begin=this->smPosition;
  smToken->end=this->smLength+this->smPosition-2;
  this->smScanner=imp_string_Scanner;
}
%%END(smACTION22)
%%BEGIN(smACTION23)
 glue=0; 
%%END(smACTION23)
%%BEGIN(smACTION24)
  PUSH(imp_string_Scanner);this->smScanner=imp_imp_Scanner;
%%END(smACTION24)
%%BEGIN(smACTION25)
{
    smToken->text=(char *)malloc(this->smLength+1);
    impCopy(this,smToken->text,0,this->smLength);
    smToken->text[this->smLength]=0;
    smToken->begin=this->smPosition;
    smToken->end=this->smLength+this->smPosition-1;
}
%%END(smACTION25)
%%BEGIN(smACTION26)
{
  smToken->text=(char *)malloc(this->smLength);
  impCopy(this,smToken->text,0,this->smLength-1);
  smToken->text[this->smLength-1]=0;
  smToken->begin=this->smPosition;
  smToken->end=this->smLength+this->smPosition-2;
  this->smScanner=imp_imp_Scanner;
}
%%END(smACTION26)
%%BEGIN(smACTION27)
{
  smToken->text=(char *)malloc(this->smLength+1);
  impCopy(this,smToken->text,0,this->smLength);
  smToken->text[this->smLength]=0;
  smToken->begin=this->smPosition;
  smToken->end=this->smLength+this->smPosition-1;
  this->smScanner=imp_imp_Scanner;
}
%%END(smACTION27)
%%BEGIN(smACTION28)
 this->smScanner=imp_main_Scanner;printf("UNMATCHED STRING\n"); 
%%END(smACTION28)
%%BEGIN(smACTION29)
{
  if(POP==imp_keep_Scanner) {
    if (this->smText[this->smLength] == '`%')
      this->endPos = this->smLength;
    goto smContinue; 
  }
  this->smScanner=TOP;
  smToken->text=(char *)malloc(this->endPos+1);
  impCopy(this,smToken->text,0,this->endPos);
  smToken->text[this->endPos]=0;
  smToken->begin=this->smPosition;
  smToken->end=this->endPos+this->smPosition-1;
}
%%END(smACTION29)
%%BEGIN(smACTION30)
 
  if (POP==imp_keep_Scanner) {
    TmSrcp srcp;
    srcp.file = this->fileNo;
    srcp.col = this->smNextColumn;
    srcp.line = this->smNextLine;
    impLog(&srcp, 101, sevERR, "'`%`%ENDKEEP`'");
    this->smScanner=TOP;
    smToken->text=(char *)malloc(this->smLength+1);
    impCopy(this,smToken->text,0,this->smLength);
    smToken->text[this->smLength]=0;
    smToken->begin=this->smPosition;
    smToken->end=this->smLength+this->smPosition-1;
  } else  {
    TmSrcp srcp;
    srcp.file = this->fileNo;
    srcp.col = this->smNextColumn;
    srcp.line = this->smNextLine;
    impLog(&srcp, 101, sevERR, "'`%`%ENDKEEP'");
    this->smScanner = imp_main_Scanner;
    smToken->text=(char *)malloc(this->smLength+1);
    impCopy(this,smToken->text,0,this->smLength);
    smToken->text[this->smLength]=0;
    smToken->begin=this->smPosition;
    smToken->end=this->smLength+this->smPosition-1;
  }

%%END(smACTION30)
%%BEGIN(smACTION31)
 PUSH(imp_keep_Scanner); goto smContinue;
%%END(smACTION31)
%%BEGIN(smACTION32)
 
		if(this->smText[this->smLength-1]==impEsc) 
		  impSkip(this,1); 
		this->endPos = this->smLength;
		goto smContinue;

%%END(smACTION32)
%%BEGIN(smACTION33)
 
  if(POP==imp_comment_Scanner) goto smContinue;
  this->smScanner=TOP; 

%%END(smACTION33)
%%BEGIN(smACTION34)
 
  this->smScanner=imp_main_Scanner;
  printf("UNMATCHED COMMENT\n"); 

%%END(smACTION34)
%%BEGIN(smACTION35)

  PUSH(imp_comment_Scanner); 
  goto smContinue;

%%END(smACTION35)
%%BEGIN(smACTION36)
 
  if (this->smText[this->smLength-1] == impEsc) 
    impSkip(this,1);
  goto smContinue;

%%END(smACTION36)
%%SET smACTIONS(1)
%%BEGIN(smACTIONS)
  switch(%%(smACTIONS[1])) {
  case   1:		/* '`%`%IF'*/ 
  case   2:		/* '`%`%SET'*/ 
  case   5:		/* '`%`%ESET'*/ 
  case   7:		/* '`%`%LOOP'*/ 
  case   9:		/* '`%`%ELSIF'*/ 
  case  10:		/* '`%`%BEGIN'*/ 
  case  12:		/* '`%`%MESSAGE'*/ 
  case  13:		/* '`%`%INCLUDE'*/ 
  case  14:		/* '`%`%PROCESS'*/ 
  case  15:		/* '`%`%EINCLUDE'*/ 
    {%%INCLUDE(smACTION4)}
    break;

  case  22:		/* TEXT*/ 
  case  59:		/* QUOT_STRING*/ 
  case  60:		/* QUOT_STRING*/ 
  case  65:		/* QUOT_STRING*/ 
  case  70:		/* '`%`%KEEP'*/ 
  case  71:		/* '`%`%KEEP'*/ 
  case  76:		/* '`%`%COMMENT'*/ 
  case  77:		/* '`%`%COMMENT'*/ 
    {%%INCLUDE(smACTION5)}
    break;

  case  49:		/* INTEGER*/ 
  case  50:		/* UNQUOT_STRING*/ 
    {%%INCLUDE(smACTION6)}
    break;

  case   6:		/* '`%`%ELSE'*/ 
  case   8:		/* '`%`%ENDIF'*/ 
    {%%INCLUDE(smACTION7)}
    break;

  case   4:		/* '`%`%KEEP'*/ 
    {%%INCLUDE(smACTION8)}
    break;

  case  16:		/* '`%`%COMMENT'*/ 
    {%%INCLUDE(smACTION9)}
    break;

  case  18:		/* '`%`%--'*/ 
    {%%INCLUDE(smACTION10)}
    break;

  case   0:		/* '`%`%('*/ 
    {%%INCLUDE(smACTION11)}
    break;

  case   3:		/* '`%`%END'*/ 
    {%%INCLUDE(smACTION12)}
    break;

  case  11:		/* '`%`%ENDLOOP'*/ 
    {%%INCLUDE(smACTION13)}
    break;

  case  19:		/* TEXT*/ 
    {%%INCLUDE(smACTION14)}
    break;

  case  20:		/* TEXT*/ 
    {%%INCLUDE(smACTION15)}
    break;

  case  21:		/* TEXT*/ 
    {%%INCLUDE(smACTION16)}
    break;

  case  24:		/* '('*/ 
    {%%INCLUDE(smACTION17)}
    break;

  case  25:		/* ')'*/ 
    {%%INCLUDE(smACTION18)}
    break;

  case  48:		/* '`%`%('*/ 
    {%%INCLUDE(smACTION19)}
    break;

  case  51:		/* QUOT_STRING*/ 
    {%%INCLUDE(smACTION20)}
    break;

  case  52:		/* QUOT_STRING*/ 
    {%%INCLUDE(smACTION21)}
    break;

  case  53:		/* QUOT_STRING*/ 
    {%%INCLUDE(smACTION22)}
    break;

  case  56:		/* BLANK*/ 
    {%%INCLUDE(smACTION23)}
    break;

  case  58:		/* '`%`%('*/ 
    {%%INCLUDE(smACTION24)}
    break;

  case  61:		/* QUOT_STRING*/ 
    {%%INCLUDE(smACTION25)}
    break;

  case  62:		/* QUOT_STRING*/ 
    {%%INCLUDE(smACTION26)}
    break;

  case  63:		/* QUOT_STRING*/ 
    {%%INCLUDE(smACTION27)}
    break;

  case  64:		/* QUOT_STRING*/ 
    {%%INCLUDE(smACTION28)}
    break;

  case  66:		/* '`%`%KEEP'*/ 
    {%%INCLUDE(smACTION29)}
    break;

  case  67:		/* '`%`%KEEP'*/ 
    {%%INCLUDE(smACTION30)}
    break;

  case  68:		/* '`%`%KEEP'*/ 
    {%%INCLUDE(smACTION31)}
    break;

  case  69:		/* '`%`%KEEP'*/ 
    {%%INCLUDE(smACTION32)}
    break;

  case  72:		/* '`%`%COMMENT'*/ 
    {%%INCLUDE(smACTION33)}
    break;

  case  73:		/* '`%`%COMMENT'*/ 
    {%%INCLUDE(smACTION34)}
    break;

  case  74:		/* '`%`%COMMENT'*/ 
    {%%INCLUDE(smACTION35)}
    break;

  case  75:		/* '`%`%COMMENT'*/ 
    {%%INCLUDE(smACTION36)}
    break;
  }
%%END(smACTIONS)
%%SET smMAP(1)
%%BEGIN(smMAPvec)
{
0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31
,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47
,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63
,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79
,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95
,96,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79
,80,81,82,83,84,85,86,87,88,89,90,123,124,125,126,127
,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143
,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159
,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175
,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191
,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207
,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223
,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239
,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255
}
%%END(smMAPvec)
%%SET smMAPvecLen(256)
%%SET smMAPvecTyp(1)
%%BEGIN(smSCANNERvec)
{
0,1,2,3,4
}
%%END(smSCANNERvec)
%%SET smSCANNERvecLen(5)
%%SET smSCANNERvecTyp(1)
%%-- rule code is 1 to high (0=no accept)!
%%BEGIN(smACCEPTvec)
{
0,0,0,0,0,20,22,57,35,25,26,38,36,40,37,39
,50,30,34,31,43,51,44,45,46,47,63,61,70,71,76,77
,52,54,32,33,41,42,29,62,64,60,1,21,53,49,28,27
,59,19,2,18,4,3,58,7,6,5,8,69,11,10,9,17
,12,14,13,15,67,75,16,48,73,0,26,51,71,77,21,19
,7,5,9,67,73,0,51,21,0,51,21,0,51,21,0,21
,0,21,0,21,0,21,0,21,0,21,0,21,0,21,0,21
,0,21,0,21,0,21,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,51,71,77,21,0,0,0,0,0,51
,21,0,0,51,21,0,21,21,21,21,21,21,21,21,21,21
,21,0,0,0,51,0,21,21,21,21,21,21,21,21,21,0
,21,21,21,21,21,21,0,21,21,21,21,21,21,21,21
}
%%END(smACCEPTvec)
%%SET smACCEPTvecLen(191)
%%SET smACCEPTvecTyp(1)
%%-- rule code is 1 to high (0=skip)!
%%BEGIN(smTOKENCODEvec)
{
25,28,29,30,0,33,34,35,36,37,38,39,40,41,42,44
,0,0,0,19,19,19,19,2,3,4,27,26,21,9,8,20
,22,6,7,12,13,11,14,5,23,24,10,15,16,17,18,45
,25,31,46,43,43,43,1,2,0,0,25,43,43,43,43,43
,43,43,32,32,32,32,32,32,0,0,0,0,0,0
}
%%END(smTOKENCODEvec)
%%SET smTOKENCODEvecLen(78)
%%SET smTOKENCODEvecTyp(1)
%%BEGIN(smEOTCODEvec)
{
23,55,64,67,73
}
%%END(smEOTCODEvec)
%%SET smEOTCODEvecLen(5)
%%SET smEOTCODEvecTyp(1)
%%BEGIN(smUNKNOWNCODEvec)
{
22,54,65,71,77
}
%%END(smUNKNOWNCODEvec)
%%SET smUNKNOWNCODEvecLen(5)
%%SET smUNKNOWNCODEvecTyp(1)
%%SET smLOOKAHEAD(1)
%%BEGIN(smLOOKAHEADtypeVec)
{
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,2,2,0,0,0,0,0,0,0,2,0,2
,0,0,0,0,0,0,0,0,0,0,0,0,0,0
}
%%END(smLOOKAHEADtypeVec)
%%SET smLOOKAHEADtypeVecLen(78)
%%SET smLOOKAHEADtypeVecTyp(1)
%%BEGIN(smLOOKAHEADprefixVec)
{
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0
}
%%END(smLOOKAHEADprefixVec)
%%SET smLOOKAHEADprefixVecLen(78)
%%SET smLOOKAHEADprefixVecTyp(1)
%%BEGIN(smLOOKAHEADsuffixVec)
{
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,1,1,0,0,0,0,0,0,0,1,0,1
,0,0,0,0,0,0,0,0,0,0,0,0,0,0
}
%%END(smLOOKAHEADsuffixVec)
%%SET smLOOKAHEADsuffixVecLen(78)
%%SET smLOOKAHEADsuffixVecTyp(1)
%%SET smFAST(0)
%%SET smROW(1)
%%SET smCOL(1)
%%SET smRDS(0)
%%SET smLES(0)
%%SET smGCS(0)
%%SET smERR(0)
%%SET smError(191)
%%BEGIN(smROWvec)
{
0,44,88,132,176,220,264,308,308,308,352,308,308,308,308,308
,396,440,308,484,528,572,308,308,308,308,616,660,704,748,792,836
,880,308,308,308,308,308,924,308,308,968,308,1012,308,308,924,924
,308,1056,1012,308,1100,1012,308,1144,1012,1188,1012,308,1012,1012,1232,1012
,1012,1012,1012,1012,1276,308,1012,308,1320,1364,308,1408,1452,1496,1540,1584
,308,308,308,308,308,1628,1672,1716,1760,1804,1848,1892,1936,1980,2024,2068
,352,2112,2156,2200,2244,2288,2332,2376,2420,2464,2508,2552,2596,2640,2684,2728
,2772,2816,2860,2904,2948,2992,3036,3080,3124,3168,3212,3256,3300,3344,3388,3432
,3476,3520,3564,1276,3608,1320,924,3652,3696,3740,3784,3828,3872,3916,3960,4004
,4048,4092,4136,4180,4224,4268,4312,4356,4400,4444,4488,4532,4576,4620,4664,4708
,4752,4796,4840,4884,4928,4972,5016,5060,5104,5148,5192,5236,5280,5324,5368,5412
,5456,5500,5544,5588,5632,5676,5720,5764,5808,5852,5896,5940,5984,6028,6072
}
%%END(smROWvec)
%%SET smROWlen(191)
%%SET smROWtyp(2)
%%BEGIN(smCOLvec)
{
0,0,0,0,0,0,0,0,0,1,2,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,1,0,3,4,5,6,0,0,7,8,9,10,11,12,0,13
,14,14,14,14,14,14,14,14,14,14,0,0,15,16,17,18
,0,19,20,21,22,23,24,25,26,27,26,28,29,30,31,32
,33,26,34,35,36,37,38,26,26,39,26,40,0,41,0,26
,0,19,20,21,22,23,24,25,26,27,26,28,29,30,31,32
,33,26,34,35,36,37,38,26,26,39,26,42,0,43,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
}
%%END(smCOLvec)
%%SET smCOLlen(256)
%%SET smCOLtyp(1)
%%BEGIN(smDFAmat)
{
5,5,5,5,5,5,6,5,5,5,5,5,5,5,5,5
,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5
,5,5,5,5,5,5,5,5,5,5,5,5,
191,7,7,73,8,191,85,9,10,11,12,13,14,15,16,17
,18,19,20,21,134,134,134,134,134,134,134,164,134,134,134,143
,75,134,134,134,134,134,134,134,22,23,24,25,
88,88,88,26,88,88,27,88,88,88,88,88,88,88,88,88
,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88
,88,88,88,88,88,88,88,88,88,88,88,88,
28,28,28,28,28,28,29,28,28,28,28,28,28,28,28,28
,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28
,28,28,28,28,28,28,28,28,28,28,28,28,
30,30,30,30,30,30,31,30,30,30,30,30,30,30,30,30
,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30
,30,30,30,30,30,30,30,30,30,30,30,30,
5,5,5,5,5,5,191,5,5,5,5,5,5,5,5,5
,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5
,5,5,5,5,5,5,5,5,5,5,5,5,
191,191,191,191,191,191,91,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,96,74,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,16,191
,191,191,191,134,134,134,134,134,134,134,134,134,134,134,134,134
,134,134,134,134,134,134,134,134,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,34,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,35,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,36,191,191,191,37,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,134,191
,191,191,191,134,134,134,134,134,134,134,134,134,134,134,134,86
,134,134,134,134,134,134,134,134,191,191,191,191,
191,191,191,40,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,41,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
28,28,28,28,28,28,191,28,28,28,28,28,28,28,28,28
,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28
,28,28,28,28,28,28,28,28,28,28,28,28,
191,191,191,191,191,191,76,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
30,30,30,30,30,30,191,30,30,30,30,30,30,30,30,30
,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30
,30,30,30,30,30,30,30,30,30,30,30,30,
191,191,191,191,191,191,77,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,44,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,134,191
,191,191,191,134,134,134,134,134,134,134,134,134,134,134,134,134
,134,134,134,134,134,134,134,134,191,191,191,191,
191,191,191,191,191,191,191,48,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,43,43,43,43,43
,43,43,43,43,43,43,43,43,191,191,191,191,
79,79,51,79,79,79,79,79,79,79,79,79,79,79,79,79
,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79
,79,79,79,79,79,79,79,79,79,79,79,79,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,105,43,169,43,43
,43,43,43,43,43,43,43,43,191,191,191,191,
191,124,80,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,43,43,43,43,43
,43,43,43,43,43,43,43,43,191,191,191,191,
191,125,81,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,43,43,43,43,43
,43,43,43,43,43,43,43,43,191,191,191,191,
191,127,82,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,43,43,43,43,43
,43,43,43,43,43,43,43,43,191,191,191,191,
191,131,83,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,133,84,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
73,73,73,32,73,73,33,73,73,73,73,73,73,73,73,73
,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73
,73,73,73,73,73,73,73,73,73,73,73,73,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,134,191
,191,191,191,134,134,134,134,134,134,134,134,134,134,134,134,134
,134,134,38,134,134,134,134,134,191,191,191,191,
191,102,102,191,191,191,135,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,104,191,191,191,191,106,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,108,108,191,191,191,136,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,110,191,161,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,50,43,43,43,43,43,43,183
,43,43,43,43,43,43,43,43,191,191,191,191,
79,79,191,79,79,79,79,79,79,79,79,79,79,79,79,79
,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79
,79,79,79,79,79,79,79,79,79,79,79,79,
191,191,191,191,191,191,94,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,134,191
,191,191,191,134,134,134,46,134,134,134,134,134,134,134,134,134
,134,134,134,134,134,134,134,134,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,52,43,43,43,43,43,43,43,43,43
,43,43,43,43,43,43,43,43,191,191,191,191,
88,88,88,26,88,88,39,88,88,88,88,88,88,88,88,88
,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88
,88,88,88,88,88,88,88,88,88,88,88,88,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,134,191
,191,191,191,134,134,134,134,134,134,134,134,134,134,134,134,134
,134,134,134,134,47,134,134,134,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,43,43,43,43,43
,43,43,43,43,53,43,43,43,191,191,191,191,
191,91,91,191,191,191,191,42,191,191,191,191,98,191,191,191
,191,191,191,43,174,187,43,137,43,43,43,78,160,166,188,43
,43,189,43,144,43,43,43,43,191,191,191,191,
191,191,191,191,191,114,191,191,191,191,191,191,191,191,134,191
,191,191,191,134,134,134,134,134,134,134,134,134,134,134,134,134
,134,134,134,134,134,134,134,134,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,55,43,43,43,103,43,43,43,43
,43,43,43,43,43,43,43,43,191,191,191,191,
191,94,94,191,191,191,191,45,191,191,191,191,100,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,43,43,43,43,43
,43,43,43,43,56,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,43,43,43,43,43
,43,57,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,49,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,43,43,43,43,43
,43,58,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,112,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,43,43,43,43,60
,43,43,43,43,43,43,43,43,191,191,191,191,
191,102,102,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,104,191,191,191,191,106,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,61,43,43,43,43,43,43,43
,43,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,116
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,62,43,43,43,43,43,43,43
,43,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,139,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,43,43,43,43,43
,43,43,43,43,63,43,43,43,191,191,191,191,
191,108,108,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,110,191,161,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,43,43,43,43,43
,43,64,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,118,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,65,43,43,43,43,43,43,43,43
,43,43,43,43,43,43,43,43,191,191,191,191,
112,112,54,112,112,112,112,112,112,112,112,112,112,112,112,112
,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112
,112,112,112,112,112,112,112,112,112,112,112,112,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,66,43,43,43,43,43,43,43,43
,43,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,119,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,43,43,43,43,43
,43,43,43,67,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,120,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,70,43,43,43,43,43,43,43,43
,43,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,142,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,140,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,162,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,59,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,182,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,138,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,124,80,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,125,81,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,149,191,191,191,191,191,191,191,
191,127,82,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,68,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,69,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,71,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,72,191,191,191,191,191,191,191,
191,191,191,191,191,191,135,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,136,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,190,43,148,43,87
,43,43,43,150,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,129
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,121,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,126,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,122,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,123,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,134,191
,191,191,191,134,134,134,134,134,134,134,134,134,134,134,134,134
,89,134,134,134,134,134,134,134,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,90,43,43,43,43,43,43,43,43
,43,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,132
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,128,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,134,191
,191,191,191,134,134,134,134,134,134,134,134,134,134,134,134,134
,134,92,134,134,134,134,134,134,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,43,43,43,43,43
,43,43,43,93,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,130,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,95,43,43,43,43,43,43,43,43
,43,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,97,43,43,43,43,43,43,43,43
,43,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,43,43,43,43,43
,99,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,101,43,43,43,43
,43,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,43,43,43,43,107
,43,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,43,43,43,43,43
,109,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,111,43,43,43,43,43,43,43,43,43
,43,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,113,43,43,43,43,43,43
,43,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,43,43,43,43,43
,43,43,43,115,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,117,43,43,43,43,43,43,43,43,43
,43,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,151,43,43,43,43,43,43,43,43
,43,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,141
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,146,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,145,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,134,191
,191,191,191,134,134,134,134,134,134,134,134,134,134,134,147,134
,134,134,134,134,134,134,134,134,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,163,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,43,43,43,43,43
,152,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,153,43,43,43,43,43,43
,43,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,154,43,43,43,43,43,43,43,43
,43,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,43,43,43,43,43
,155,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,43,43,43,43,43
,43,43,43,43,43,156,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,157,43,43,43,43,43,43,43,43,43,43,43,43
,43,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,158,43,43,43,43,43,43,43,43
,43,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,43,43,43,43,43
,43,43,43,43,43,159,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,167,43,43,43,43,43,43,43,43
,43,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,165,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,43,43,43,168,43
,43,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,43,43,170,43,43
,43,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,43,43,43,43,43
,43,43,43,171,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,172,43,43,43,43,43,43,43,43,43,43
,43,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,43,43,173,43,43
,43,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,43,43,43,176,43
,43,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,175,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,177,43,43,43,43,43,43,43,43,43,43
,43,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,43,43,43,43,43
,43,43,43,178,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,43,43,43,43,43
,179,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,180,43,43,43,43,43,43,43,43,43,43
,43,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,43,43,43,43,43
,181,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,184,43,43,43,43,43,43,43,43
,43,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,43,43,43,43,43
,43,43,185,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,43,43,43,43,186
,43,43,43,43,43,43,43,43,191,191,191,191
}
%%END(smDFAmat)
%%SET smDFArowLen(0)
%%SET smDFAcolLen(6116)
%%SET smDFAtyp(1)
%%PROCESS("%%(tmkLibrary)/Common.imp")
%%PROCESS("%%(smkLibrary)/Scan.imp")

==> impScan.h <==
#ifndef _impScan_h_
#define _impScan_h_

#include "impCommon.h"

typedef enum impScScanner {
	imp_MAIN_MAIN_Scanner = 0,
	imp_MAIN_IMP_Scanner = 1,
	imp_MAIN_STRING_Scanner = 2,
	imp_MAIN_KEEP_Scanner = 3,
	imp_MAIN_COMMENT_Scanner = 4
} impScScanner;

typedef enum imp_MAIN_ScToken {
	imp_MAIN_UNKNOWN_Token = 0,
	imp_MAIN_ENDOFTEXT_Token = 1,
	imp_MAIN_2_Token = 2,
	imp_MAIN_3_Token = 3,
	imp_MAIN_4_Token = 4,
	imp_MAIN_5_Token = 5,
	imp_MAIN_6_Token = 6,
	imp_MAIN_7_Token = 7,
	imp_MAIN_8_Token = 8,
	imp_MAIN_9_Token = 9,
	imp_MAIN_10_Token = 10,
	imp_MAIN_11_Token = 11,
	imp_MAIN_12_Token = 12,
	imp_MAIN_13_Token = 13,
	imp_MAIN_14_Token = 14,
	imp_MAIN_15_Token = 15,
	imp_MAIN_16_Token = 16,
	imp_MAIN_17_Token = 17,
	imp_MAIN_TEXT_Token = 18,
	imp_MAIN_19_Token = 19,
	imp_MAIN_20_Token = 20,
	imp_MAIN_21_Token = 21,
	imp_MAIN_22_Token = 22,
	imp_MAIN_23_Token = 23,
	imp_MAIN_24_Token = 24,
	imp_MAIN_25_Token = 25,
	imp_MAIN_26_Token = 26,
	imp_MAIN_27_Token = 27,
	imp_MAIN_28_Token = 28,
	imp_MAIN_29_Token = 29,
	imp_MAIN_INTEGER_Token = 30,
	imp_MAIN_31_Token = 31,
	imp_MAIN_32_Token = 32,
	imp_MAIN_33_Token = 33,
	imp_MAIN_34_Token = 34,
	imp_MAIN_35_Token = 35,
	imp_MAIN_36_Token = 36,
	imp_MAIN_37_Token = 37,
	imp_MAIN_38_Token = 38,
	imp_MAIN_39_Token = 39,
	imp_MAIN_40_Token = 40,
	imp_MAIN_41_Token = 41,
	imp_MAIN_QUOT_STRING_Token = 42,
	imp_MAIN_43_Token = 43,
	imp_MAIN_44_Token = 44,
	imp_MAIN_UNQUOT_STRING_Token = 45,
	imp_MAIN_c272525COMMENT27_Token = -1,
	imp_MAIN_c2725252D2D27_Token = -1,
	imp_MAIN_BLANK_Token = -1,
	imp_MAIN_COMMENT_Token = -1
} imp_MAIN_ScToken;


typedef struct impScContextItem *impScContext;

extern impScContext impScNew( /* SMVocScanner smScanner */ );
extern void impScDelete( /* SMContext smThis */ );
extern int impScSkip( /* SMContext smThis, int smLength */ );
extern int impScModify( /* SMContext smThis, unsigned char *smBuffer, int smLength */ );
extern int impScCopy( /* SMContext smThis, unsigned char *smBuffer, unsigned int smFrom, unsigned int smTo */ );
extern int impScMapCopy( /* SMContext smThis, unsigned char *smBuffer, unsigned int smFrom, unsigned int smTo */ );
extern void impScScrScanner( /* impScScanner scanner, int smOnOff */ );
extern void impScScrToken( /* impScScanner scanner, int smCode, int smOnOff */ );
extern void impScScrRule( /* impScScanner scanner, int smCode, int smOnOff */ );
extern int impScan( /* SMContext smThis, TMToken *smToken */ );


typedef struct impScContextItem {

/* Private */

  unsigned char *smBegining;
  unsigned char *smContinue;
  unsigned char *smEnd;
  unsigned char *smPosPrevLine;
  unsigned char *smPosLine;
  unsigned char *smPosContinue;

/* Public */

  int smSize;

  int smBufferOverflow;
  int smLength;
  unsigned char *smText;

  int smLine;
  int smColumn;
  int smPosition;
  int smNextLine;
  int smNextColumn;
  int smNextPosition;

  impScScanner smScanner;



  int fd;
  int fileNo;
  int endPos;


} impScContextItem;

#endif

==> impScan.c <==
/*----------------------------------------------------------------------*\

    impScan.c

    ScannerMaker generated scanner

\*----------------------------------------------------------------------*/


#include <stdio.h>
#include <memory.h>
#include <malloc.h>
#include "impScan.h"

/* Local imports */
extern int impScReader( /* SMContext smThis, unsigned char smBuffer, unsigned int smLength */ );
extern int impScAction( /* SMContext smThis, int smInternalCode, TMToken *smToken */ );
extern int impScPostHook( /* SMContext smThis, TMToken *smToken */ );

/* System dependencies */

/* These datatypes should be defined to be unsigned integers of length 1, 2
 * and 4 bytes respectively.
 */
typedef unsigned char UByte1;
typedef unsigned short UByte2;
typedef unsigned int UByte4;


/* START of scanning tables */


/*
 * MAP
 *
 * [character] -> character
 *
 */

static UByte1 smMap[256]={
0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31
,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47
,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63
,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79
,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95
,96,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79
,80,81,82,83,84,85,86,87,88,89,90,123,124,125,126,127
,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143
,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159
,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175
,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191
,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207
,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223
,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239
,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255
}
;


/*
 * SCANNER
 *
 * [scanner] -> state
 */

static UByte1 smScanner[5]={
0,1,2,3,4
}
;

/*
 * ACCEPT (internal token code)
 *
 * [state] -> icode
 */

static UByte1 smAccept[191]={
0,0,0,0,0,20,22,57,35,25,26,38,36,40,37,39
,50,30,34,31,43,51,44,45,46,47,63,61,70,71,76,77
,52,54,32,33,41,42,29,62,64,60,1,21,53,49,28,27
,59,19,2,18,4,3,58,7,6,5,8,69,11,10,9,17
,12,14,13,15,67,75,16,48,73,0,26,51,71,77,21,19
,7,5,9,67,73,0,51,21,0,51,21,0,51,21,0,21
,0,21,0,21,0,21,0,21,0,21,0,21,0,21,0,21
,0,21,0,21,0,21,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,51,71,77,21,0,0,0,0,0,51
,21,0,0,51,21,0,21,21,21,21,21,21,21,21,21,21
,21,0,0,0,51,0,21,21,21,21,21,21,21,21,21,0
,21,21,21,21,21,21,0,21,21,21,21,21,21,21,21
}
;

/*
 * EXTERNAL TOKEN CODE
 *
 * [icode] -> ecode
 */

static UByte1 smTokenCode[78]={
25,28,29,30,0,33,34,35,36,37,38,39,40,41,42,44
,0,0,0,19,19,19,19,2,3,4,27,26,21,9,8,20
,22,6,7,12,13,11,14,5,23,24,10,15,16,17,18,45
,25,31,46,43,43,43,1,2,0,0,25,43,43,43,43,43
,43,43,32,32,32,32,32,32,0,0,0,0,0,0
}
;

/*
 * EOT and Unknown
 *
 * [scanner] -> icode
 *
 */

static UByte1 smEOTCode[5]={
23,55,64,67,73
}
;
static UByte1 smUnknownCode[5]={
22,54,65,71,77
}
;

/*
 * DFA
 */

static UByte2 smDFArow[191]={
0,44,88,132,176,220,264,308,308,308,352,308,308,308,308,308
,396,440,308,484,528,572,308,308,308,308,616,660,704,748,792,836
,880,308,308,308,308,308,924,308,308,968,308,1012,308,308,924,924
,308,1056,1012,308,1100,1012,308,1144,1012,1188,1012,308,1012,1012,1232,1012
,1012,1012,1012,1012,1276,308,1012,308,1320,1364,308,1408,1452,1496,1540,1584
,308,308,308,308,308,1628,1672,1716,1760,1804,1848,1892,1936,1980,2024,2068
,352,2112,2156,2200,2244,2288,2332,2376,2420,2464,2508,2552,2596,2640,2684,2728
,2772,2816,2860,2904,2948,2992,3036,3080,3124,3168,3212,3256,3300,3344,3388,3432
,3476,3520,3564,1276,3608,1320,924,3652,3696,3740,3784,3828,3872,3916,3960,4004
,4048,4092,4136,4180,4224,4268,4312,4356,4400,4444,4488,4532,4576,4620,4664,4708
,4752,4796,4840,4884,4928,4972,5016,5060,5104,5148,5192,5236,5280,5324,5368,5412
,5456,5500,5544,5588,5632,5676,5720,5764,5808,5852,5896,5940,5984,6028,6072
}
;
static UByte1 smDFAcol[256]={
0,0,0,0,0,0,0,0,0,1,2,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,1,0,3,4,5,6,0,0,7,8,9,10,11,12,0,13
,14,14,14,14,14,14,14,14,14,14,0,0,15,16,17,18
,0,19,20,21,22,23,24,25,26,27,26,28,29,30,31,32
,33,26,34,35,36,37,38,26,26,39,26,40,0,41,0,26
,0,19,20,21,22,23,24,25,26,27,26,28,29,30,31,32
,33,26,34,35,36,37,38,26,26,39,26,42,0,43,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
}
;
  
static UByte1 smDFAval[6116]={
5,5,5,5,5,5,6,5,5,5,5,5,5,5,5,5
,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5
,5,5,5,5,5,5,5,5,5,5,5,5,
191,7,7,73,8,191,85,9,10,11,12,13,14,15,16,17
,18,19,20,21,134,134,134,134,134,134,134,164,134,134,134,143
,75,134,134,134,134,134,134,134,22,23,24,25,
88,88,88,26,88,88,27,88,88,88,88,88,88,88,88,88
,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88
,88,88,88,88,88,88,88,88,88,88,88,88,
28,28,28,28,28,28,29,28,28,28,28,28,28,28,28,28
,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28
,28,28,28,28,28,28,28,28,28,28,28,28,
30,30,30,30,30,30,31,30,30,30,30,30,30,30,30,30
,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30
,30,30,30,30,30,30,30,30,30,30,30,30,
5,5,5,5,5,5,191,5,5,5,5,5,5,5,5,5
,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5
,5,5,5,5,5,5,5,5,5,5,5,5,
191,191,191,191,191,191,91,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,96,74,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,16,191
,191,191,191,134,134,134,134,134,134,134,134,134,134,134,134,134
,134,134,134,134,134,134,134,134,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,34,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,35,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,36,191,191,191,37,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,134,191
,191,191,191,134,134,134,134,134,134,134,134,134,134,134,134,86
,134,134,134,134,134,134,134,134,191,191,191,191,
191,191,191,40,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,41,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
28,28,28,28,28,28,191,28,28,28,28,28,28,28,28,28
,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28
,28,28,28,28,28,28,28,28,28,28,28,28,
191,191,191,191,191,191,76,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
30,30,30,30,30,30,191,30,30,30,30,30,30,30,30,30
,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30
,30,30,30,30,30,30,30,30,30,30,30,30,
191,191,191,191,191,191,77,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,44,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,134,191
,191,191,191,134,134,134,134,134,134,134,134,134,134,134,134,134
,134,134,134,134,134,134,134,134,191,191,191,191,
191,191,191,191,191,191,191,48,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,43,43,43,43,43
,43,43,43,43,43,43,43,43,191,191,191,191,
79,79,51,79,79,79,79,79,79,79,79,79,79,79,79,79
,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79
,79,79,79,79,79,79,79,79,79,79,79,79,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,105,43,169,43,43
,43,43,43,43,43,43,43,43,191,191,191,191,
191,124,80,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,43,43,43,43,43
,43,43,43,43,43,43,43,43,191,191,191,191,
191,125,81,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,43,43,43,43,43
,43,43,43,43,43,43,43,43,191,191,191,191,
191,127,82,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,43,43,43,43,43
,43,43,43,43,43,43,43,43,191,191,191,191,
191,131,83,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,133,84,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
73,73,73,32,73,73,33,73,73,73,73,73,73,73,73,73
,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73
,73,73,73,73,73,73,73,73,73,73,73,73,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,134,191
,191,191,191,134,134,134,134,134,134,134,134,134,134,134,134,134
,134,134,38,134,134,134,134,134,191,191,191,191,
191,102,102,191,191,191,135,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,104,191,191,191,191,106,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,108,108,191,191,191,136,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,110,191,161,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,50,43,43,43,43,43,43,183
,43,43,43,43,43,43,43,43,191,191,191,191,
79,79,191,79,79,79,79,79,79,79,79,79,79,79,79,79
,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79
,79,79,79,79,79,79,79,79,79,79,79,79,
191,191,191,191,191,191,94,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,134,191
,191,191,191,134,134,134,46,134,134,134,134,134,134,134,134,134
,134,134,134,134,134,134,134,134,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,52,43,43,43,43,43,43,43,43,43
,43,43,43,43,43,43,43,43,191,191,191,191,
88,88,88,26,88,88,39,88,88,88,88,88,88,88,88,88
,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88
,88,88,88,88,88,88,88,88,88,88,88,88,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,134,191
,191,191,191,134,134,134,134,134,134,134,134,134,134,134,134,134
,134,134,134,134,47,134,134,134,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,43,43,43,43,43
,43,43,43,43,53,43,43,43,191,191,191,191,
191,91,91,191,191,191,191,42,191,191,191,191,98,191,191,191
,191,191,191,43,174,187,43,137,43,43,43,78,160,166,188,43
,43,189,43,144,43,43,43,43,191,191,191,191,
191,191,191,191,191,114,191,191,191,191,191,191,191,191,134,191
,191,191,191,134,134,134,134,134,134,134,134,134,134,134,134,134
,134,134,134,134,134,134,134,134,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,55,43,43,43,103,43,43,43,43
,43,43,43,43,43,43,43,43,191,191,191,191,
191,94,94,191,191,191,191,45,191,191,191,191,100,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,43,43,43,43,43
,43,43,43,43,56,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,43,43,43,43,43
,43,57,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,49,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,43,43,43,43,43
,43,58,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,112,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,43,43,43,43,60
,43,43,43,43,43,43,43,43,191,191,191,191,
191,102,102,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,104,191,191,191,191,106,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,61,43,43,43,43,43,43,43
,43,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,116
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,62,43,43,43,43,43,43,43
,43,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,139,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,43,43,43,43,43
,43,43,43,43,63,43,43,43,191,191,191,191,
191,108,108,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,110,191,161,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,43,43,43,43,43
,43,64,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,118,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,65,43,43,43,43,43,43,43,43
,43,43,43,43,43,43,43,43,191,191,191,191,
112,112,54,112,112,112,112,112,112,112,112,112,112,112,112,112
,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112
,112,112,112,112,112,112,112,112,112,112,112,112,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,66,43,43,43,43,43,43,43,43
,43,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,119,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,43,43,43,43,43
,43,43,43,67,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,120,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,70,43,43,43,43,43,43,43,43
,43,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,142,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,140,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,162,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,59,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,182,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,138,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,124,80,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,125,81,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,149,191,191,191,191,191,191,191,
191,127,82,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,68,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,69,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,71,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,72,191,191,191,191,191,191,191,
191,191,191,191,191,191,135,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,136,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,190,43,148,43,87
,43,43,43,150,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,129
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,121,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,126,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,122,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,123,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,134,191
,191,191,191,134,134,134,134,134,134,134,134,134,134,134,134,134
,89,134,134,134,134,134,134,134,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,90,43,43,43,43,43,43,43,43
,43,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,132
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,128,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,134,191
,191,191,191,134,134,134,134,134,134,134,134,134,134,134,134,134
,134,92,134,134,134,134,134,134,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,43,43,43,43,43
,43,43,43,93,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,130,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,95,43,43,43,43,43,43,43,43
,43,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,97,43,43,43,43,43,43,43,43
,43,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,43,43,43,43,43
,99,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,101,43,43,43,43
,43,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,43,43,43,43,107
,43,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,43,43,43,43,43
,109,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,111,43,43,43,43,43,43,43,43,43
,43,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,113,43,43,43,43,43,43
,43,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,43,43,43,43,43
,43,43,43,115,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,117,43,43,43,43,43,43,43,43,43
,43,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,151,43,43,43,43,43,43,43,43
,43,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,141
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,146,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,145,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,134,191
,191,191,191,134,134,134,134,134,134,134,134,134,134,134,147,134
,134,134,134,134,134,134,134,134,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,163,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,43,43,43,43,43
,152,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,153,43,43,43,43,43,43
,43,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,154,43,43,43,43,43,43,43,43
,43,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,43,43,43,43,43
,155,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,43,43,43,43,43
,43,43,43,43,43,156,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,157,43,43,43,43,43,43,43,43,43,43,43,43
,43,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,158,43,43,43,43,43,43,43,43
,43,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,43,43,43,43,43
,43,43,43,43,43,159,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,167,43,43,43,43,43,43,43,43
,43,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,165,191
,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,43,43,43,168,43
,43,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,43,43,170,43,43
,43,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,43,43,43,43,43
,43,43,43,171,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,172,43,43,43,43,43,43,43,43,43,43
,43,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,43,43,173,43,43
,43,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,43,43,43,176,43
,43,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,175,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,177,43,43,43,43,43,43,43,43,43,43
,43,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,43,43,43,43,43
,43,43,43,178,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,43,43,43,43,43
,179,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,180,43,43,43,43,43,43,43,43,43,43
,43,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,43,43,43,43,43
,181,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,184,43,43,43,43,43,43,43,43
,43,43,43,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,43,43,43,43,43
,43,43,185,43,43,43,43,43,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191
,191,191,191,43,43,43,43,43,43,43,43,43,43,43,43,186
,43,43,43,43,43,43,43,43,191,191,191,191
}
;
  


/* END of scanning tables */

/*
 * LOOKAHEAD
 *
 * [icode] -> type   (0=no lookahead, 1=fix prefix, 2=fix suffix, 3=variable length)
 * [icode] -> prefix (length or state)
 * [icode] -> suffix (length or state)
 *
 */

static UByte1 smLookaheadType[78]={
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,2,2,0,0,0,0,0,0,0,2,0,2
,0,0,0,0,0,0,0,0,0,0,0,0,0,0
}
;
static UByte1 smLookaheadPrefix[78]={
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0
}
;
static UByte1 smLookaheadSuffix[78]={
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,1,1,0,0,0,0,0,0,0,1,0,1
,0,0,0,0,0,0,0,0,0,0,0,0,0,0
}
;

static unsigned char *smLookahead(smCode,smAt,smEnd)
     int smCode;
     unsigned char *smAt;
     unsigned char *smEnd;
{
  unsigned char *halt;
  unsigned char ch;
  int state;

  switch(smLookaheadType[smCode]) {
  case 1:			/* Fix prefix length */
    return smAt+smLookaheadPrefix[smCode];
  case 2:			/* Fix suffix length */
    return smEnd-smLookaheadSuffix[smCode];
  case 3:			/* Variable length */
    /* Scan forward */
    state=smLookaheadPrefix[smCode];
    for(;;) {
ch=smMap[*smAt++];
{

  
    
      
  state=smDFAval[smDFArow[state]+smDFAcol[ch]];
      
    
  
}
      if(state==191) break;
      if(smAccept[state]>0) {
    halt=smAt;
    continue;
      }
    }
    /* Scan bakward */
    state=smLookaheadSuffix[smCode];
    for(;;) {
      if(smAccept[state]>0 && smEnd<=halt) break;
ch=smMap[*--smEnd];
{

  
    
      
  state=smDFAval[smDFArow[state]+smDFAcol[ch]];
      
    
  
}
      }
    return smEnd;
  }
  return (unsigned char *) -1;
}





/*
 * Source position calculation
 */

static void smSourcePosition(smThis,smAt,smEnd)
     impScContext smThis;
     unsigned char *smAt;
     unsigned char *smEnd;
{
  if(smThis->smPosContinue<smEnd) {
    if(smThis->smPosContinue>smAt) smAt=smThis->smPosContinue;
    smThis->smNextPosition+=smEnd-smAt;
    for(;smAt<smEnd;smAt++)
      if(*smAt==10) {
    smThis->smPosLine=smAt;
    smThis->smNextLine++;
      }

    smThis->smNextColumn=smEnd-smThis->smPosLine;
    smThis->smPosContinue=smEnd;
  }
}

static void smRewindSourcePosition(smThis,smAt,smEnd)
     impScContext smThis;
     unsigned char *smAt;
     unsigned char *smEnd;
{
  if(smThis->smPosContinue>smEnd) return;
  smThis->smNextPosition-=smEnd-smAt;
  while(smAt<smEnd--) if(*smEnd==10) smThis->smNextLine--;
  while(smThis->smBegining<smEnd)
    if(*smEnd==10) {
      smThis->smPosLine=smEnd;
      break;
    }
    else smEnd--;
  if(smAt<smThis->smPosLine) smThis->smPosLine=smThis->smPosPrevLine;
  smThis->smNextColumn=smAt-smThis->smPosLine;
  smThis->smPosContinue=smAt;
}


/*
 * int smReadBuffer(SMContext smThis)
 *
 * SmThis function reads charcters using the reader into the buffer in a
 * context. The buffer is enlarged if the current buffer is full
 * (smEnd-smText==smSize) or reduced if current buffer is larger than
 * the standard buffer size and the token may fit the standard buffer
 * (smEnd-smText<smTokenSize AND smSize>smTokenSize). The function
 * returns the number of characters read into the buffer.
 *
 */

static int smReadBuffer(smThis)
     impScContext smThis;
{
  long length;
  int size;
  long mod;

  if(smThis->smBegining!=smThis->smText) {
    /* Move data to beginning of buffer */
    length=smThis->smEnd-smThis->smText;
    memcpy((void *)smThis->smBegining,(void *)smThis->smText,length);
    if(length<1024 && smThis->smSize>1024) {
      /* Reduce buffer size */
      smThis->smSize=1024;
      smThis->smBegining=(unsigned char *)realloc(smThis->smBegining,1024+1);
    }
  }
  else if(smThis->smBegining+smThis->smSize==smThis->smEnd) {
    /* Try to enlarge buffer */
    if(smThis->smSize==524288) {
      /* Cut Buffer */
      smSourcePosition(smThis,smThis->smText,smThis->smEnd-1024);
      memcpy((void *)smThis->smBegining,(void *)(smThis->smEnd-1024),1024);
      mod=smThis->smEnd-smThis->smBegining-1024;
      smThis->smContinue-=mod;
      smThis->smEnd-=mod;
      smThis->smPosPrevLine-=mod;
      smThis->smPosLine-=mod;
      smThis->smPosContinue-=mod;
      smThis->smBufferOverflow+=mod;
    }
    else {
      unsigned char *begining = smThis->smBegining;
      size=smThis->smSize*1.5;
      if(size>524288) size=524288;
      /* Enlarge buffer */
      smThis->smBegining=(unsigned char *)realloc(smThis->smBegining,size+1);
      if(smThis->smBegining==NULL) {
    /* Cut Buffer */
    smThis->smBegining = begining;	/* Restore to original buffer */
    smSourcePosition(smThis,smThis->smText,smThis->smEnd-1024);
    memcpy((void *)smThis->smBegining, (void *)(smThis->smEnd-1024), 1024);
    mod=smThis->smEnd-smThis->smBegining-1024;
    smThis->smContinue-=mod;
    smThis->smEnd-=mod;
    smThis->smPosPrevLine-=mod;
    smThis->smPosLine-=mod;
    smThis->smPosContinue-=mod;
        smThis->smBufferOverflow+=mod;
      }
      else
    smThis->smSize=size;
    }
  }
  if(smThis->smBegining!=smThis->smText) {
    mod=smThis->smText-smThis->smBegining;
    smThis->smContinue-=mod;
    smThis->smEnd-=mod;
    smThis->smPosPrevLine-=mod;
    smThis->smPosLine-=mod;
    smThis->smPosContinue-=mod;
    smThis->smText-=mod;
  }
  length=smThis->smSize-(smThis->smEnd-smThis->smBegining);
  length=impScReader(smThis,smThis->smEnd,(unsigned int)length);
  if(length<0) return length;
  smThis->smEnd+=length;
  return length;
}

/*
 * SMContext SMNew( impScScanner scanner )
 *
 * Create a new context.
 *
 */

impScContext impScNew(smScanner)
    impScScanner smScanner;
{
  impScContext smThis;

  smThis=(impScContext)malloc(sizeof(impScContextItem));
  if(smThis==NULL) {
    return NULL;
  }
  smThis->smBegining=(unsigned char *)malloc(1024+1);
  if(smThis->smBegining==NULL) {
    free((char *)smThis);
    return NULL;
  }
  smThis->smSize=1024;
  smThis->smContinue=smThis->smBegining;
  smThis->smEnd=smThis->smBegining;
  smThis->smPosPrevLine=smThis->smBegining-1;
  smThis->smPosLine=smThis->smBegining-1;
  smThis->smPosContinue=smThis->smBegining;
  smThis->smText=smThis->smBegining;

  smThis->smLength=0;
  smThis->smNextLine=1;
  smThis->smNextColumn=1;
  smThis->smNextPosition=0;
  smThis->smLine=1;
  smThis->smColumn=1;
  smThis->smPosition=0;
  smThis->smScanner=smScanner;
  smThis->smBegining[0]=0;
  return smThis;
}

/*
 * void SMDelete( SMContext smThis )
 *
 * Destroy a context and associated buffer.
 *
 */

void impScDelete(smThis)
     impScContext smThis;
{
  free((char *)smThis->smBegining);
  free((char *)smThis);
}

/*
 * int SMSkip( SMContext smThis, int smLength )
 *
 * Enlarge/reduce the current token in a context with length characters.
 * If length is less than zero reduce the token, if length is greater
 * than zero enlarge the token.
 *
 */

int impScSkip(smThis,smLength)
     impScContext smThis;
     int smLength;
{
  int empty;

  if(smLength>0) {
    empty=smThis->smEnd-smThis->smContinue;
    if(empty<smLength) {
      empty=smReadBuffer(smThis);
      if(empty<0) return empty;
      empty=smThis->smEnd-smThis->smContinue;
      if(empty<smLength) smLength=empty;
    }
    smSourcePosition(smThis,smThis->smContinue,smThis->smContinue+smLength);
    smThis->smContinue+=smLength;
    smThis->smLength+=smLength;
  }
  else if(smLength<0) {
    smLength= -smLength;
    if(smLength>smThis->smLength) smLength=smThis->smLength;
    smRewindSourcePosition(smThis,smThis->smContinue-smLength,smThis->smContinue);
    smThis->smContinue-=smLength;
    smThis->smLength-=smLength;
    }
  return smLength;
}

int impScModify(smThis,smBuffer,smLength)
     impScContext smThis;
     unsigned char *smBuffer;
     int smLength;
{
  if(smLength<0) {
/* This code is identical to smSkip but no source position is rewinded */
    smLength= -smLength;
    if(smLength>smThis->smLength) smLength=smThis->smLength;
    smThis->smContinue-=smLength;
    smThis->smLength-=smLength;
/***********************************************************************/
    memcpy((void *)smThis->smContinue,(void *)smBuffer,smLength);
    return smLength;
  }
  else if(smLength>0) {
    int length1;
    int length2;

    for(length2=smLength;(length1=impScSkip(smThis,length2));length2-=length1) {
      if(length1<0) return length1;
      memcpy((void *)(smThis->smContinue-length1),(void *)smBuffer,length1);
      smBuffer+=length1;
    }
    return smLength-length2;
  }
  return smLength;
}

int impScCopy(smThis,smBuffer,smFrom,smTo)
     impScContext smThis;
     unsigned char *smBuffer;
     unsigned int smFrom;
     unsigned int smTo;
{
  if(smFrom>smThis->smLength) smFrom=smThis->smLength;
  if(smTo>smThis->smLength) smTo=smThis->smLength;
  memcpy((void *)smBuffer,(void *)(smThis->smText+smFrom),smTo-smFrom);
  return smTo-smFrom;
}

int impScMapCopy(smThis,smBuffer,smFrom,smTo)
     impScContext smThis;
     unsigned char *smBuffer;
     unsigned int smFrom;
     unsigned int smTo;
{
  int n;
  int len;
  unsigned char *at;

  if(smFrom>smThis->smLength) smFrom=smThis->smLength;
  if(smTo>smThis->smLength) smTo=smThis->smLength;
  len=0;
  for(n=smFrom,at=smThis->smText+smFrom;n<smTo;n++) {
*smBuffer++=smMap[*at++];
    len++;
  }
  return len;
}

void impScScrScanner(smScanner, smOnOff)
     impScScanner smScanner;
     int smOnOff;
{
}

void impScScrToken(smScanner, smCode, smOnOff)
     impScScanner smScanner;
     int smCode;
     int smOnOff;
{
}

void impScScrRule(smScanner, smCode, smOnOff)
     impScScanner smScanner;
     int smCode;
     int smOnOff;
{
}

int impScan(smThis,smToken)
     impScContext smThis;
     TmToken *smToken;
{
  unsigned char *at;
  unsigned char *end;
  unsigned char *rew_at;
  unsigned char ch;
  int state;
  int rew_state;
  int code;

  do {				/* Skip loop */
    smThis->smLine=smThis->smNextLine;
    smThis->smColumn=smThis->smNextColumn;
    smThis->smPosition=smThis->smNextPosition;
    end=(smThis->smEnd);
    smThis->smText=smThis->smContinue;
    smThis->smBufferOverflow=0;
    smToken->srcp.line=smThis->smNextLine;
    smToken->srcp.col=smThis->smNextColumn;
    smThis->smPosPrevLine=smThis->smPosLine;
    rew_at=smThis->smText;
    do {			/* Continue loop */
      rew_state=191;
      rew_at++;
      at=(smThis->smContinue);
      state=smScanner[smThis->smScanner];
      for (;;) {
    if(at==end) {
      int mod;

      if(state>=191) state-=191+1;
      smThis->smContinue=end;
      mod=smReadBuffer(smThis);
      if(mod<0) return mod;
      rew_at-=end-smThis->smContinue;
      at=smThis->smContinue;
      end=smThis->smEnd;
          if(at==end)
        break;
        }
      ch = *at++;
{

  
    
      
  state=smDFAval[smDFArow[state]+smDFAcol[ch]];
      
    
  
}
      if(state>=191) break;
      if(smAccept[state]>0) {
        rew_state=state;
        rew_at=at;
      }
      }
      if(rew_state==191) {
        if(rew_at>end) {
      code=smEOTCode[smThis->smScanner];
      rew_at=end;
        }
        else
      code=smUnknownCode[smThis->smScanner];
      }
      else
    code=smAccept[rew_state]-1;
      if(smLookaheadType[code])
    smThis->smContinue=smLookahead(code,smThis->smText,rew_at);
      else
    smThis->smContinue=rew_at;
      smThis->smLength=smThis->smContinue-smThis->smText;
      smSourcePosition(smThis,smThis->smText,smThis->smContinue);
      smToken->code=smTokenCode[code]-1;
      code=impScAction(smThis,code,smToken);
    } while(code<-1);
    smToken->code=code;
    code=impScPostHook(smThis,smToken);
  } while(code<0);
  return smToken->code=code;
}

==> impScSema.c <==
/*----------------------------------------------------------------------*\

    impScSema.c

    ScannerMaker generated semantic actions

\*----------------------------------------------------------------------*/

#include "impScan.h"

/* %%DECLARATION */

  
#include <stdio.h>
#include "impMacro.h"
#include "impList.h"
#define PUSH(scanner) (lexScanner[lexBalance++]=scanner)
#define POP (lexScanner[--lexBalance])
#define TOP (lexScanner[lexBalance])
#define BALANCE (lexBalance>0)

  static int lexBalance=0;
  static int lexScanner[512];
  static int lexColumn=0;
  static int glue=0;


/* END %%DECLARATION */

int impScReader(smThis,smBuffer,smLength)
     impScContext smThis;
     unsigned char *smBuffer;
     unsigned int smLength;
{


  return read(this->fd,smBuffer,smLength);


}


int impScAction(smThis,smInternalCode,smToken)
     impScContext smThis;
     int smInternalCode;
     TmToken *smToken;
{
  enum {
    smSkipToken		= -1,
    smContinueToken	= -2
  };
  switch(smInternalCode) {
  case   1:		/* '%%IF'*/ 
  case   2:		/* '%%SET'*/ 
  case   5:		/* '%%ESET'*/ 
  case   7:		/* '%%LOOP'*/ 
  case   9:		/* '%%ELSIF'*/ 
  case  10:		/* '%%BEGIN'*/ 
  case  12:		/* '%%MESSAGE'*/ 
  case  13:		/* '%%INCLUDE'*/ 
  case  14:		/* '%%PROCESS'*/ 
  case  15:		/* '%%EINCLUDE'*/ 
    { lexColumn=this->smColumn;this->smScanner=imp_imp_Scanner; 
}
    break;

  case  22:		/* TEXT*/ 
  case  59:		/* QUOT_STRING*/ 
  case  60:		/* QUOT_STRING*/ 
  case  65:		/* QUOT_STRING*/ 
  case  70:		/* '%%KEEP'*/ 
  case  71:		/* '%%KEEP'*/ 
  case  76:		/* '%%COMMENT'*/ 
  case  77:		/* '%%COMMENT'*/ 
    { goto smContinue; 
}
    break;

  case  49:		/* INTEGER*/ 
  case  50:		/* UNQUOT_STRING*/ 
    {{
  smToken->text=(char *)malloc(this->smLength+1);
  impCopy(this,smToken->text,0,this->smLength);
  smToken->text[this->smLength]=0;
  smToken->begin=this->smPosition;
  smToken->end=this->smLength+this->smPosition-1;
}
}
    break;

  case   6:		/* '%%ELSE'*/ 
  case   8:		/* '%%ENDIF'*/ 
    { {
  register int skip;

  skip=1;
  if(this->smColumn>1) while(this->smText[this->smLength-skip]<=' ') skip++;
  if(skip>1) impSkip(this,-skip+1);
} 
}
    break;

  case   4:		/* '%%KEEP'*/ 
    { 
  lexColumn=this->smColumn;
  this->smText = this->smText+this->smLength;
  this->smLength = 0;
  PUSH(imp_main_Scanner);
  this->smScanner=imp_keep_Scanner; 
  goto smContinue;

}
    break;

  case  16:		/* '%%COMMENT'*/ 
    { 
  lexColumn=this->smColumn;PUSH(imp_main_Scanner);this->smScanner=imp_comment_Scanner; goto smContinue;

}
    break;

  case  18:		/* '%%--'*/ 
    { 
  if ((this->smColumn == 1) && (this->smText[this->smLength] == '\n'))
    impSkip(this,1);

}
    break;

  case   0:		/* '%%('*/ 
    { lexColumn=this->smColumn; PUSH(imp_main_Scanner);this->smScanner=imp_imp_Scanner; 
}
    break;

  case   3:		/* '%%END'*/ 
    { lexColumn=1;this->smScanner=imp_imp_Scanner; 
}
    break;

  case  11:		/* '%%ENDLOOP'*/ 
    { lexColumn=1;this->smScanner=imp_imp_Scanner; 
}
    break;

  case  19:		/* TEXT*/ 
    {{
  if (this->smText[this->smLength-1] == impEsc) 
    impSkip(this,1); 
  smToken->text=(char *)malloc(this->smLength+1);
  impCopy(this,smToken->text,0,this->smLength);
  smToken->text[this->smLength]=0;
  smToken->begin=this->smPosition;
  smToken->end=this->smLength+this->smPosition-1;
}
}
    break;

  case  20:		/* TEXT*/ 
    {{
  if (this->smText[this->smLength-1] == impEsc) 
    impSkip(this,1); 
  smToken->text=(char *)malloc(this->smLength+1);
  impCopy(this,smToken->text,0,this->smLength);
  smToken->text[this->smLength]=0;
  smToken->begin=this->smPosition;
  smToken->end=this->smLength+this->smPosition-1;
}
}
    break;

  case  21:		/* TEXT*/ 
    {{
  if (this->smText[this->smLength-1] == impEsc) 
    impSkip(this,1); 
  smToken->text=(char *)malloc(this->smLength+1);
  impCopy(this,smToken->text,0,this->smLength);
  smToken->text[this->smLength]=0;
  smToken->begin=this->smPosition;
  smToken->end=this->smLength+this->smPosition-1;
}
}
    break;

  case  24:		/* '('*/ 
    { if(BALANCE) PUSH(imp_imp_Scanner); else PUSH(imp_main_Scanner); 
}
    break;

  case  25:		/* ')'*/ 
    {
  this->smScanner=POP; 
  if(this->smScanner==imp_string_Scanner || lexColumn>1) 
    impSkip(this,-(this->smLength-1)); 
  if(this->smText[this->smLength-1]==impEsc) impSkip(this,1); 
  smToken->text=(char *)malloc(this->smLength+1);
  impCopy(this,smToken->text,1,this->smLength);
  smToken->text[this->smLength-1]=0;
  smToken->begin=this->smPosition;
  smToken->end=this->smLength+this->smPosition-1;

}
    break;

  case  48:		/* '%%('*/ 
    { PUSH(imp_imp_Scanner); 
}
    break;

  case  51:		/* QUOT_STRING*/ 
    {{
  smToken->text=(char *)malloc(this->smLength-1);
  impCopy(this,smToken->text,1,this->smLength-1);
  smToken->text[this->smLength-2]=0;
  smToken->begin=this->smPosition;
  smToken->end=this->smLength+this->smPosition-3;
}
}
    break;

  case  52:		/* QUOT_STRING*/ 
    {{
  smToken->text=(char *)malloc(this->smLength);
  impCopy(this,smToken->text,1,this->smLength);
  smToken->text[this->smLength-1]=0;
  smToken->begin=this->smPosition;
  smToken->end=this->smLength+this->smPosition-2;
}
}
    break;

  case  53:		/* QUOT_STRING*/ 
    {{
  smToken->text=(char *)malloc(this->smLength);
  impCopy(this,smToken->text,1,this->smLength);
  smToken->text[this->smLength-1]=0;
  smToken->begin=this->smPosition;
  smToken->end=this->smLength+this->smPosition-2;
  this->smScanner=imp_string_Scanner;
}
}
    break;

  case  56:		/* BLANK*/ 
    { glue=0; 
}
    break;

  case  58:		/* '%%('*/ 
    {  PUSH(imp_string_Scanner);this->smScanner=imp_imp_Scanner;
}
    break;

  case  61:		/* QUOT_STRING*/ 
    {{
    smToken->text=(char *)malloc(this->smLength+1);
    impCopy(this,smToken->text,0,this->smLength);
    smToken->text[this->smLength]=0;
    smToken->begin=this->smPosition;
    smToken->end=this->smLength+this->smPosition-1;
}
}
    break;

  case  62:		/* QUOT_STRING*/ 
    {{
  smToken->text=(char *)malloc(this->smLength);
  impCopy(this,smToken->text,0,this->smLength-1);
  smToken->text[this->smLength-1]=0;
  smToken->begin=this->smPosition;
  smToken->end=this->smLength+this->smPosition-2;
  this->smScanner=imp_imp_Scanner;
}
}
    break;

  case  63:		/* QUOT_STRING*/ 
    {{
  smToken->text=(char *)malloc(this->smLength+1);
  impCopy(this,smToken->text,0,this->smLength);
  smToken->text[this->smLength]=0;
  smToken->begin=this->smPosition;
  smToken->end=this->smLength+this->smPosition-1;
  this->smScanner=imp_imp_Scanner;
}
}
    break;

  case  64:		/* QUOT_STRING*/ 
    { this->smScanner=imp_main_Scanner;printf("UNMATCHED STRING\n"); 
}
    break;

  case  66:		/* '%%KEEP'*/ 
    {{
  if(POP==imp_keep_Scanner) {
    if (this->smText[this->smLength] == '%')
      this->endPos = this->smLength;
    goto smContinue; 
  }
  this->smScanner=TOP;
  smToken->text=(char *)malloc(this->endPos+1);
  impCopy(this,smToken->text,0,this->endPos);
  smToken->text[this->endPos]=0;
  smToken->begin=this->smPosition;
  smToken->end=this->endPos+this->smPosition-1;
}
}
    break;

  case  67:		/* '%%KEEP'*/ 
    { 
  if (POP==imp_keep_Scanner) {
    TmSrcp srcp;
    srcp.file = this->fileNo;
    srcp.col = this->smNextColumn;
    srcp.line = this->smNextLine;
    impLog(&srcp, 101, sevERR, "'%%ENDKEEP'");
    this->smScanner=TOP;
    smToken->text=(char *)malloc(this->smLength+1);
    impCopy(this,smToken->text,0,this->smLength);
    smToken->text[this->smLength]=0;
    smToken->begin=this->smPosition;
    smToken->end=this->smLength+this->smPosition-1;
  } else  {
    TmSrcp srcp;
    srcp.file = this->fileNo;
    srcp.col = this->smNextColumn;
    srcp.line = this->smNextLine;
    impLog(&srcp, 101, sevERR, "'%%ENDKEEP'");
    this->smScanner = imp_main_Scanner;
    smToken->text=(char *)malloc(this->smLength+1);
    impCopy(this,smToken->text,0,this->smLength);
    smToken->text[this->smLength]=0;
    smToken->begin=this->smPosition;
    smToken->end=this->smLength+this->smPosition-1;
  }

}
    break;

  case  68:		/* '%%KEEP'*/ 
    { PUSH(imp_keep_Scanner); goto smContinue;
}
    break;

  case  69:		/* '%%KEEP'*/ 
    { 
		if(this->smText[this->smLength-1]==impEsc) 
		  impSkip(this,1); 
		this->endPos = this->smLength;
		goto smContinue;

}
    break;

  case  72:		/* '%%COMMENT'*/ 
    { 
  if(POP==imp_comment_Scanner) goto smContinue;
  this->smScanner=TOP; 

}
    break;

  case  73:		/* '%%COMMENT'*/ 
    { 
  this->smScanner=imp_main_Scanner;
  printf("UNMATCHED COMMENT\n"); 

}
    break;

  case  74:		/* '%%COMMENT'*/ 
    {
  PUSH(imp_comment_Scanner); 
  goto smContinue;

}
    break;

  case  75:		/* '%%COMMENT'*/ 
    { 
  if (this->smText[this->smLength-1] == impEsc) 
    impSkip(this,1);
  goto smContinue;

}
    break;
  }
  return smToken->code;
}

int impScPostHook(smThis,smToken)
     impScContext smThis;
     TmToken *smToken;
{
  enum {
    smSkipToken		= -1
  };


/*  printf("TOKEN %d LENGTH %d AT %d %d (%d)\n",smCode,this->smLength,this->smLine,this->smColumn,this->smPosition);*/
  smToken->srcp.file = this->fileNo;


  return smToken->code;
}


==> imp.voc <==
   1    1 $
   2    2 '('
   3    3 ')'
   4    4 ','
   5    5 '='
   6    6 '#'
   7    7 '>'
   8    8 '<'
   9    9 '?'
  10   10 '*'
  11   11 '+'
  12   12 '-'
  13   13 '/'
  14   14 '['
  15   15 ']'
  16   16 '{'
  17   17 '}'
  18   18 TEXT
  19   19 '<='
  20   20 'OR'
  21   21 '>='
  22   22 '?R'
  23   23 '?V'
  24   24 '%%('
  25   25 'AND'
  26   26 'NOT'
  27   27 '%%IF'
  28   28 '%%SET'
  29   29 '%%END'
  30   30 INTEGER
  31   31 '%%KEEP'
  32   32 '%%ESET'
  33   33 '%%ELSE'
  34   34 '%%LOOP'
  35   35 '%%ENDIF'
  36   36 '%%ELSIF'
  37   37 '%%BEGIN'
  38   38 '%%ENDLOOP'
  39   39 '%%MESSAGE'
  40   40 '%%INCLUDE'
  41   41 '%%PROCESS'
  42   42 QUOT_STRING
  43   43 '%%EINCLUDE'
  44   44 'IMP$SYSTEM'
  45   45 UNQUOT_STRING

==> impCommon.h <==
#ifndef _impCommon_H_
#define _impCommon_H_
/* impCommon.h

   Common definitions for imp

   This file is generated from information in 'imp.tmk'

*/

/* The import section (%%IMPORT) */

/* .tmk-import */
typedef int TmNatural;

/* The source position type (%%SRCP) */

typedef struct TmSrcp {
    TmNatural line;
    TmNatural col;
    TmNatural file;
} TmSrcp;


/* The token type (%%TOKEN) */

typedef struct TmToken {
    int code;
    TmSrcp srcp;
    char *text;
    int begin;
    int end;
} TmToken;

#endif


